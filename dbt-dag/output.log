[2025-05-02T17:32:44.504+0200] {providers_manager.py:946} INFO - The hook_class 'airflow.providers.standard.hooks.filesystem.FSHook' is not fully initialized (UI widgets will be missing), because the 'flask_appbuilder' package is not installed, however it is not required for Airflow components to work
[2025-05-02T17:32:44.505+0200] {providers_manager.py:946} INFO - The hook_class 'airflow.providers.standard.hooks.package_index.PackageIndexHook' is not fully initialized (UI widgets will be missing), because the 'flask_appbuilder' package is not installed, however it is not required for Airflow components to work
standalone | Starting Airflow Standalone
standalone | Password for the admin user has been previously generated in /home/jpbap/airflow/simple_auth_manager_passwords.json.generated. Not echoing it here.
standalone | Checking database is initialized
standalone | Database ready
scheduler  | [2025-05-02T17:32:46.039+0200] {providers_manager.py:946} INFO - The hook_class 'airflow.providers.standard.hooks.filesystem.FSHook' is not fully initialized (UI widgets will be missing), because the 'flask_appbuilder' package is not installed, however it is not required for Airflow components to work
scheduler  | [2025-05-02T17:32:46.040+0200] {providers_manager.py:946} INFO - The hook_class 'airflow.providers.standard.hooks.package_index.PackageIndexHook' is not fully initialized (UI widgets will be missing), because the 'flask_appbuilder' package is not installed, however it is not required for Airflow components to work
api-server | [2025-05-02T17:32:46.121+0200] {providers_manager.py:946} INFO - The hook_class 'airflow.providers.standard.hooks.filesystem.FSHook' is not fully initialized (UI widgets will be missing), because the 'flask_appbuilder' package is not installed, however it is not required for Airflow components to work
api-server | [2025-05-02T17:32:46.122+0200] {providers_manager.py:946} INFO - The hook_class 'airflow.providers.standard.hooks.package_index.PackageIndexHook' is not fully initialized (UI widgets will be missing), because the 'flask_appbuilder' package is not installed, however it is not required for Airflow components to work
api-server | ____________       _____________
api-server | ____    |__( )_________  __/__  /________      __
api-server | ____  /| |_  /__  ___/_  /_ __  /_  __ \_ | /| / /
api-server | ___  ___ |  / _  /   _  __/ _  / / /_/ /_ |/ |/ /
api-server | _/_/  |_/_/  /_/    /_/    /_/  \____/____/|__/
api-server | [2025-05-02T17:32:46.157+0200] {api_server_command.py:92} INFO - Running the uvicorn with:
api-server | Apps: all
api-server | Workers: 4
api-server | Host: 0.0.0.0:8080
api-server | Timeout: 120
api-server | Logfiles: -
api-server | =================================================================
api-server | INFO:     Uvicorn running on http://0.0.0.0:8080 (Press CTRL+C to quit)
api-server | INFO:     Started parent process [92903]
triggerer  | [2025-05-02T17:32:46.206+0200] {providers_manager.py:946} INFO - The hook_class 'airflow.providers.standard.hooks.filesystem.FSHook' is not fully initialized (UI widgets will be missing), because the 'flask_appbuilder' package is not installed, however it is not required for Airflow components to work
triggerer  | [2025-05-02T17:32:46.206+0200] {providers_manager.py:946} INFO - The hook_class 'airflow.providers.standard.hooks.package_index.PackageIndexHook' is not fully initialized (UI widgets will be missing), because the 'flask_appbuilder' package is not installed, however it is not required for Airflow components to work
triggerer  | ____________       _____________
triggerer  | ____    |__( )_________  __/__  /________      __
triggerer  | ____  /| |_  /__  ___/_  /_ __  /_  __ \_ | /| / /
triggerer  | ___  ___ |  / _  /   _  __/ _  / / /_/ /_ |/ |/ /
triggerer  | _/_/  |_/_/  /_/    /_/    /_/  \____/____/|__/
triggerer  | [2025-05-02 17:32:46 +0200] [92933] [INFO] Starting gunicorn 23.0.0
triggerer  | [2025-05-02 17:32:46 +0200] [92933] [INFO] Listening at: http://[::]:8794 (92933)
triggerer  | [2025-05-02 17:32:46 +0200] [92933] [INFO] Using worker: sync
triggerer  | [2025-05-02 17:32:46 +0200] [92934] [INFO] Booting worker with pid: 92934
triggerer  | [2025-05-02 17:32:46 +0200] [92935] [INFO] Booting worker with pid: 92935
dag-processor | [2025-05-02T17:32:46.305+0200] {providers_manager.py:946} INFO - The hook_class 'airflow.providers.standard.hooks.filesystem.FSHook' is not fully initialized (UI widgets will be missing), because the 'flask_appbuilder' package is not installed, however it is not required for Airflow components to work
dag-processor | [2025-05-02T17:32:46.306+0200] {providers_manager.py:946} INFO - The hook_class 'airflow.providers.standard.hooks.package_index.PackageIndexHook' is not fully initialized (UI widgets will be missing), because the 'flask_appbuilder' package is not installed, however it is not required for Airflow components to work
scheduler  | ____________       _____________
scheduler  | ____    |__( )_________  __/__  /________      __
scheduler  | ____  /| |_  /__  ___/_  /_ __  /_  __ \_ | /| / /
scheduler  | ___  ___ |  / _  /   _  __/ _  / / /_/ /_ |/ |/ /
scheduler  | _/_/  |_/_/  /_/    /_/    /_/  \____/____/|__/
scheduler  | [2025-05-02 17:32:46 +0200] [92958] [INFO] Starting gunicorn 23.0.0
scheduler  | [2025-05-02 17:32:46 +0200] [92958] [INFO] Listening at: http://[::]:8793 (92958)
scheduler  | [2025-05-02 17:32:46 +0200] [92958] [INFO] Using worker: sync
scheduler  | [2025-05-02T17:32:46.578+0200] {scheduler_job_runner.py:989} INFO - Starting the scheduler
scheduler  | [2025-05-02 17:32:46 +0200] [92959] [INFO] Booting worker with pid: 92959
scheduler  | [2025-05-02T17:32:46.580+0200] {executor_loader.py:269} INFO - Loaded executor: :LocalExecutor:
scheduler  | [2025-05-02T17:32:46.584+0200] {scheduler_job_runner.py:2128} INFO - Adopting or resetting orphaned tasks for active dag runs
scheduler  | [2025-05-02 17:32:46 +0200] [92962] [INFO] Booting worker with pid: 92962
dag-processor | [2025-05-02T17:32:46.807+0200] {settings.py:60} INFO - Configured default timezone UTC
triggerer  | [2025-05-02T17:32:46.821+0200] {triggerer_job_runner.py:161} INFO - Starting the triggerer
dag-processor | [2025-05-02T17:32:46.827+0200] {dag_processor_job_runner.py:59} INFO - Starting the Dag Processor Job
dag-processor | [2025-05-02T17:32:46.827+0200] {manager.py:245} INFO - Processing files using up to 2 processes at a time
dag-processor | [2025-05-02T17:32:46.828+0200] {manager.py:246} INFO - Process each file at most once every 30 seconds
dag-processor | [2025-05-02T17:32:46.829+0200] {manager.py:120} INFO - DAG bundles loaded: dags-folder, example_dags
triggerer  | /home/jpbap/miniconda3/envs/neo_bank3/lib/python3.12/site-packages/airflow/sdk/execution_time/supervisor.py:449 DeprecationWarning: This process (pid=92905) is multi-threaded, use of fork() may lead to deadlocks in the child.
dag-processor | [2025-05-02T17:32:46.831+0200] {manager.py:120} INFO - DAG bundles loaded: dags-folder, example_dags
dag-processor | [2025-05-02T17:32:46.832+0200] {manager.py:256} INFO - Checking for new files in bundle dags-folder every 300 seconds
dag-processor | [2025-05-02T17:32:46.832+0200] {manager.py:256} INFO - Checking for new files in bundle example_dags every 300 seconds
dag-processor | [2025-05-02T17:32:46.835+0200] {manager.py:526} INFO - Refreshing bundle dags-folder
dag-processor | [2025-05-02T17:32:46.845+0200] {manager.py:577} INFO - Searching for files in dags-folder at /home/jpbap/airflow/dags
dag-processor | [2025-05-02T17:32:46.845+0200] {manager.py:579} INFO - Found 0 files for bundle dags-folder
dag-processor | [2025-05-02T17:32:46.858+0200] {manager.py:526} INFO - Refreshing bundle example_dags
dag-processor | [2025-05-02T17:32:46.868+0200] {manager.py:577} INFO - Searching for files in example_dags at /home/jpbap/miniconda3/envs/neo_bank3/lib/python3.12/site-packages/airflow/example_dags
dag-processor | [2025-05-02T17:32:46.884+0200] {manager.py:579} INFO - Found 58 files for bundle example_dags
dag-processor | /home/jpbap/miniconda3/envs/neo_bank3/lib/python3.12/site-packages/airflow/sdk/execution_time/supervisor.py:449 DeprecationWarning: This process (pid=92904) is multi-threaded, use of fork() may lead to deadlocks in the child.
dag-processor | [2025-05-02T17:32:46.956+0200] {manager.py:748} INFO -
dag-processor | ================================================================================
dag-processor | DAG File Processing Stats
dag-processor | Bundle        File Path                                                     PID  Current Duration      # DAGs    # Errors  Last Duration    Last Run At
dag-processor | ------------  ----------------------------------------------------------  -----  ------------------  --------  ----------  ---------------  -------------
dag-processor | example_dags  example_workday_timetable.py                                92964  0.61s                      0           0
dag-processor | example_dags  example_xcom.py                                             92965  0.60s                      0           0
dag-processor | example_dags  example_bash_operator.py                                                                      0           0
dag-processor | example_dags  example_bash_decorator.py                                                                     0           0
dag-processor | example_dags  example_dag_decorator.py                                                                      0           0
dag-processor | example_dags  example_asset_with_watchers.py                                                                0           0
dag-processor | example_dags  plugins/decreasing_priority_weight_strategy.py                                                0           0
dag-processor | example_dags  example_short_circuit_operator.py                                                             0           0
dag-processor | example_dags  tutorial_objectstorage.py                                                                     0           0
dag-processor | example_dags  example_skip_dag.py                                                                           0           0
dag-processor | example_dags  plugins/listener_plugin.py                                                                    0           0
dag-processor | example_dags  example_nested_branch_dag.py                                                                  0           0
dag-processor | example_dags  example_dynamic_task_mapping_with_no_taskflow_operators.py                                    0           0
dag-processor | example_dags  plugins/workday.py                                                                            0           0
dag-processor | example_dags  example_short_circuit_decorator.py                                                            0           0
dag-processor | example_dags  example_outlet_event_extra.py                                                                 0           0
dag-processor | example_dags  example_trigger_target_dag.py                                                                 0           0
dag-processor | example_dags  example_complex.py                                                                            0           0
dag-processor | example_dags  example_passing_params_via_test_command.py                                                    0           0
dag-processor | example_dags  example_setup_teardown.py                                                                     0           0
dag-processor | example_dags  example_python_decorator.py                                                                   0           0
dag-processor | example_dags  plugins/event_listener.py                                                                     0           0
dag-processor | example_dags  example_inlet_event_extra.py                                                                  0           0
dag-processor | example_dags  example_sensors.py                                                                            0           0
dag-processor | example_dags  example_trigger_controller_dag.py                                                             0           0
dag-processor | example_dags  example_branch_day_of_week_operator.py                                                        0           0
dag-processor | example_dags  example_sensor_decorator.py                                                                   0           0
dag-processor | example_dags  example_custom_weight.py                                                                      0           0
dag-processor | example_dags  tutorial_taskflow_api_virtualenv.py                                                           0           0
dag-processor | example_dags  example_task_group.py                                                                         0           0
dag-processor | example_dags  example_params_ui_tutorial.py                                                                 0           0
dag-processor | example_dags  tutorial_taskflow_templates.py                                                                0           0
dag-processor | example_dags  example_kubernetes_executor.py                                                                0           0
dag-processor | example_dags  example_display_name.py                                                                       0           0
dag-processor | example_dags  example_local_kubernetes_executor.py                                                          0           0
dag-processor | example_dags  example_latest_only_with_trigger.py                                                           0           0
dag-processor | example_dags  example_setup_teardown_taskflow.py                                                            0           0
dag-processor | example_dags  example_asset_alias_with_no_taskflow.py                                                       0           0
dag-processor | example_dags  example_simplest_dag.py                                                                       0           0
dag-processor | example_dags  example_asset_decorator.py                                                                    0           0
dag-processor | example_dags  example_xcomargs.py                                                                           0           0
dag-processor | example_dags  example_dynamic_task_mapping.py                                                               0           0
dag-processor | example_dags  example_time_delta_sensor_async.py                                                            0           0
dag-processor | example_dags  example_external_task_marker_dag.py                                                           0           0
dag-processor | example_dags  example_branch_labels.py                                                                      0           0
dag-processor | example_dags  example_asset_alias.py                                                                        0           0
dag-processor | example_dags  example_latest_only.py                                                                        0           0
dag-processor | example_dags  tutorial_taskflow_api.py                                                                      0           0
dag-processor | example_dags  tutorial.py                                                                                   0           0
dag-processor | example_dags  example_python_operator.py                                                                    0           0
dag-processor | example_dags  tutorial_dag.py                                                                               0           0
dag-processor | example_dags  example_task_group_decorator.py                                                               0           0
dag-processor | example_dags  example_branch_python_dop_operator_3.py                                                       0           0
dag-processor | example_dags  example_branch_operator.py                                                                    0           0
dag-processor | example_dags  example_branch_datetime_operator.py                                                           0           0
dag-processor | example_dags  example_params_trigger_ui.py                                                                  0           0
dag-processor | example_dags  example_branch_operator_decorator.py                                                          0           0
dag-processor | example_dags  example_assets.py                                                                             0           0
dag-processor | ================================================================================
dag-processor | [2025-05-02T17:32:46.971+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:47.008+0200] {dag.py:2517} INFO - Setting next_dagrun for example_workday_timetable to 2025-05-02 00:00:00+00:00, run_after=2025-05-03 00:00:00+00:00
dag-processor | /home/jpbap/miniconda3/envs/neo_bank3/lib/python3.12/site-packages/airflow/sdk/execution_time/supervisor.py:449 DeprecationWarning: This process (pid=92904) is multi-threaded, use of fork() may lead to deadlocks in the child.
dag-processor | [2025-05-02T17:32:47.070+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:47.077+0200] {dag.py:2517} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
dag-processor | [2025-05-02T17:32:47.122+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:47.135+0200] {dag.py:2517} INFO - Setting next_dagrun for example_bash_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:32:47.181+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:47.187+0200] {dag.py:2517} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
dag-processor | [2025-05-02T17:32:47.281+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:47.289+0200] {dag.py:2517} INFO - Setting next_dagrun for example_short_circuit_operator to None, run_after=None
dag-processor | [2025-05-02T17:32:47.328+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:47.333+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
dag-processor | [2025-05-02T17:32:47.381+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:47.390+0200] {dag.py:2517} INFO - Setting next_dagrun for example_skip_dag to 2025-05-02 15:32:47.390399+00:00, run_after=2025-05-02 15:32:47.390399+00:00
dag-processor | [2025-05-02T17:32:47.487+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:47.495+0200] {dag.py:2517} INFO - Setting next_dagrun for example_nested_branch_dag to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:32:47.536+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:47.542+0200] {dag.py:2517} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to None, run_after=None
dag-processor | [2025-05-02T17:32:47.652+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:47.659+0200] {dag.py:2517} INFO - Setting next_dagrun for example_short_circuit_decorator to None, run_after=None
dag-processor | [2025-05-02T17:32:47.711+0200] {dag.py:1894} INFO - Sync 3 DAGs
dag-processor | [2025-05-02T17:32:47.724+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_with_extra_by_context to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:32:47.728+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_with_extra_by_yield to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:32:47.731+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_with_extra_from_classic_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
api-server | [2025-05-02T17:32:47.778+0200] {providers_manager.py:946} INFO - The hook_class 'airflow.providers.standard.hooks.filesystem.FSHook' is not fully initialized (UI widgets will be missing), because the 'flask_appbuilder' package is not installed, however it is not required for Airflow components to work
api-server | [2025-05-02T17:32:47.779+0200] {providers_manager.py:946} INFO - The hook_class 'airflow.providers.standard.hooks.package_index.PackageIndexHook' is not fully initialized (UI widgets will be missing), because the 'flask_appbuilder' package is not installed, however it is not required for Airflow components to work
dag-processor | [2025-05-02T17:32:47.799+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:47.807+0200] {dag.py:2517} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
api-server | [2025-05-02T17:32:47.857+0200] {providers_manager.py:946} INFO - The hook_class 'airflow.providers.standard.hooks.filesystem.FSHook' is not fully initialized (UI widgets will be missing), because the 'flask_appbuilder' package is not installed, however it is not required for Airflow components to work
api-server | [2025-05-02T17:32:47.858+0200] {providers_manager.py:946} INFO - The hook_class 'airflow.providers.standard.hooks.package_index.PackageIndexHook' is not fully initialized (UI widgets will be missing), because the 'flask_appbuilder' package is not installed, however it is not required for Airflow components to work
dag-processor | [2025-05-02T17:32:47.889+0200] {dag.py:1894} INFO - Sync 1 DAGs
api-server | [2025-05-02T17:32:47.898+0200] {providers_manager.py:946} INFO - The hook_class 'airflow.providers.standard.hooks.filesystem.FSHook' is not fully initialized (UI widgets will be missing), because the 'flask_appbuilder' package is not installed, however it is not required for Airflow components to work
api-server | [2025-05-02T17:32:47.899+0200] {providers_manager.py:946} INFO - The hook_class 'airflow.providers.standard.hooks.package_index.PackageIndexHook' is not fully initialized (UI widgets will be missing), because the 'flask_appbuilder' package is not installed, however it is not required for Airflow components to work
dag-processor | [2025-05-02T17:32:47.900+0200] {dag.py:2517} INFO - Setting next_dagrun for example_complex to None, run_after=None
api-server | [2025-05-02T17:32:47.914+0200] {providers_manager.py:946} INFO - The hook_class 'airflow.providers.standard.hooks.filesystem.FSHook' is not fully initialized (UI widgets will be missing), because the 'flask_appbuilder' package is not installed, however it is not required for Airflow components to work
api-server | [2025-05-02T17:32:47.915+0200] {providers_manager.py:946} INFO - The hook_class 'airflow.providers.standard.hooks.package_index.PackageIndexHook' is not fully initialized (UI widgets will be missing), because the 'flask_appbuilder' package is not installed, however it is not required for Airflow components to work
dag-processor | [2025-05-02T17:32:47.943+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:47.954+0200] {dag.py:2517} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2025-05-02 15:32:00+00:00, run_after=2025-05-02 15:32:00+00:00
dag-processor | [2025-05-02T17:32:48.003+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:48.008+0200] {dag.py:2517} INFO - Setting next_dagrun for example_setup_teardown to None, run_after=None
dag-processor | [2025-05-02T17:32:48.333+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:48.339+0200] {dag.py:2517} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
dag-processor | [2025-05-02T17:32:48.402+0200] {dag.py:1894} INFO - Sync 2 DAGs
dag-processor | [2025-05-02T17:32:48.411+0200] {dag.py:2517} INFO - Setting next_dagrun for read_asset_event to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:32:48.414+0200] {dag.py:2517} INFO - Setting next_dagrun for read_asset_event_from_classic to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:32:48.496+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:48.501+0200] {dag.py:2517} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
dag-processor | [2025-05-02T17:32:48.584+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:48.591+0200] {dag.py:2517} INFO - Setting next_dagrun for example_weekday_branch_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:32:48.618+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:48.629+0200] {dag.py:2517} INFO - Setting next_dagrun for example_sensors to None, run_after=None
dag-processor | [2025-05-02T17:32:48.675+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:48.680+0200] {dag.py:2517} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
dag-processor | [2025-05-02T17:32:48.715+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:48.725+0200] {dag.py:2517} INFO - Setting next_dagrun for example_custom_weight to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:32:48.776+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:48.781+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_taskflow_api_virtualenv to None, run_after=None
dag-processor | [2025-05-02T17:32:48.826+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:48.832+0200] {dag.py:2517} INFO - Setting next_dagrun for example_task_group to None, run_after=None
dag-processor | [2025-05-02T17:32:48.909+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:48.913+0200] {dag.py:2517} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
dag-processor | [2025-05-02T17:32:48.951+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:48.961+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_taskflow_templates to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:32:49.046+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:49.051+0200] {dag.py:2517} INFO - Setting next_dagrun for example_display_name to None, run_after=None
dag-processor | [2025-05-02T17:32:49.128+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:49.137+0200] {dag.py:2517} INFO - Setting next_dagrun for latest_only_with_trigger to 2025-05-02 15:32:49.136924+00:00, run_after=2025-05-02 15:32:49.136924+00:00
dag-processor | [2025-05-02T17:32:49.305+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:49.311+0200] {dag.py:2517} INFO - Setting next_dagrun for example_setup_teardown_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:32:49.393+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:49.398+0200] {dag.py:2517} INFO - Setting next_dagrun for example_simplest_dag to None, run_after=None
dag-processor | [2025-05-02T17:32:49.575+0200] {dag.py:1894} INFO - Sync 2 DAGs
dag-processor | [2025-05-02T17:32:49.580+0200] {dag.py:2517} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
dag-processor | [2025-05-02T17:32:49.582+0200] {dag.py:2517} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
dag-processor | [2025-05-02T17:32:49.637+0200] {dag.py:1894} INFO - Sync 2 DAGs
dag-processor | [2025-05-02T17:32:49.643+0200] {dag.py:2517} INFO - Setting next_dagrun for example_dynamic_task_mapping to None, run_after=None
dag-processor | [2025-05-02T17:32:49.646+0200] {dag.py:2517} INFO - Setting next_dagrun for example_task_mapping_second_order to None, run_after=None
dag-processor | [2025-05-02T17:32:49.691+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:49.697+0200] {dag.py:2517} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
dag-processor | [2025-05-02T17:32:49.739+0200] {dag.py:1894} INFO - Sync 2 DAGs
dag-processor | [2025-05-02T17:32:49.743+0200] {dag.py:2517} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
dag-processor | [2025-05-02T17:32:49.745+0200] {dag.py:2517} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
dag-processor | [2025-05-02T17:32:49.795+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:49.807+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_labels to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:32:49.851+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:49.860+0200] {dag.py:2517} INFO - Setting next_dagrun for latest_only to 2025-05-02 15:32:49.860357+00:00, run_after=2025-05-02 15:32:49.860357+00:00
dag-processor | [2025-05-02T17:32:49.913+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:49.919+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
standalone | Airflow is ready
standalone | Airflow Standalone is for development purposes only. Do not use this in production!
dag-processor | [2025-05-02T17:32:49.956+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:49.963+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial to 2025-05-02 15:32:49.963295+00:00, run_after=2025-05-02 15:32:49.963295+00:00
dag-processor | [2025-05-02T17:32:50.014+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:50.019+0200] {dag.py:2517} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
api-server | INFO:     Started server process [92919]
api-server | INFO:     Waiting for application startup.
api-server | INFO:     Application startup complete.
dag-processor | [2025-05-02T17:32:50.054+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:50.059+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
api-server | INFO:     Started server process [92920]
api-server | INFO:     Waiting for application startup.
api-server | INFO:     Application startup complete.
api-server | INFO:     Started server process [92918]
api-server | INFO:     Waiting for application startup.
api-server | INFO:     Application startup complete.
api-server | INFO:     Started server process [92917]
api-server | INFO:     Waiting for application startup.
api-server | INFO:     Application startup complete.
dag-processor | [2025-05-02T17:32:50.219+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:50.225+0200] {dag.py:2517} INFO - Setting next_dagrun for example_task_group_decorator to None, run_after=None
dag-processor | [2025-05-02T17:32:50.260+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:50.270+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2025-05-02 15:32:00+00:00, run_after=2025-05-02 15:32:00+00:00
dag-processor | [2025-05-02T17:32:50.424+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:50.433+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:32:50.470+0200] {dag.py:1894} INFO - Sync 3 DAGs
dag-processor | [2025-05-02T17:32:50.479+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:32:50.482+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:32:50.484+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:32:50.641+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:50.646+0200] {dag.py:2517} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
dag-processor | [2025-05-02T17:32:50.700+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:50.714+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_python_operator_decorator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:32:50.757+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:50.765+0200] {dag.py:2517} INFO - Setting next_dagrun for example_bash_decorator to None, run_after=None
dag-processor | [2025-05-02T17:32:50.800+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:32:50.806+0200] {dag.py:2517} INFO - Setting next_dagrun for example_asset_with_watchers to None, run_after=None
dag-processor | [2025-05-02T17:32:50.849+0200] {dag.py:1894} INFO - Sync 4 DAGs
dag-processor | [2025-05-02T17:32:50.855+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_alias_example_alias_consumer_with_no_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:32:50.857+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_alias_example_alias_producer_with_no_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:32:50.858+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_s3_bucket_consumer_with_no_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:32:50.858+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_s3_bucket_producer_with_no_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:32:50.904+0200] {dag.py:1894} INFO - Sync 3 DAGs
dag-processor | [2025-05-02T17:32:50.910+0200] {dag.py:2517} INFO - Setting next_dagrun for asset1_producer to None, run_after=None
dag-processor | [2025-05-02T17:32:50.912+0200] {dag.py:2517} INFO - Setting next_dagrun for asset2_producer to None, run_after=None
dag-processor | [2025-05-02T17:32:50.913+0200] {dag.py:2517} INFO - Setting next_dagrun for consumes_asset_decorator to None, run_after=None
dag-processor | [2025-05-02T17:32:50.959+0200] {dag.py:1894} INFO - Sync 4 DAGs
dag-processor | [2025-05-02T17:32:50.965+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_alias_example_alias_consumer to None, run_after=None
dag-processor | [2025-05-02T17:32:50.967+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_alias_example_alias_producer to None, run_after=None
dag-processor | [2025-05-02T17:32:50.968+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_s3_bucket_consumer to None, run_after=None
dag-processor | [2025-05-02T17:32:50.968+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_s3_bucket_producer to None, run_after=None
dag-processor | [2025-05-02T17:32:51.115+0200] {dag.py:1894} INFO - Sync 10 DAGs
dag-processor | [2025-05-02T17:32:51.120+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_consumes_1 to None, run_after=None
dag-processor | [2025-05-02T17:32:51.121+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_consumes_1_and_2 to None, run_after=None
dag-processor | [2025-05-02T17:32:51.121+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_consumes_1_never_scheduled to None, run_after=None
dag-processor | [2025-05-02T17:32:51.122+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_consumes_unknown_never_scheduled to None, run_after=None
dag-processor | [2025-05-02T17:32:51.124+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_produces_1 to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:32:51.125+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_produces_2 to None, run_after=None
dag-processor | [2025-05-02T17:32:51.128+0200] {dag.py:2517} INFO - Setting next_dagrun for conditional_asset_and_time_based_timetable to 2025-04-30 01:00:00+00:00, run_after=2025-04-30 01:00:00+00:00
dag-processor | [2025-05-02T17:32:51.129+0200] {dag.py:2517} INFO - Setting next_dagrun for consume_1_and_2_with_asset_expressions to None, run_after=None
dag-processor | [2025-05-02T17:32:51.130+0200] {dag.py:2517} INFO - Setting next_dagrun for consume_1_or_2_with_asset_expressions to None, run_after=None
dag-processor | [2025-05-02T17:32:51.131+0200] {dag.py:2517} INFO - Setting next_dagrun for consume_1_or_both_2_and_3_with_asset_expressions to None, run_after=None
dag-processor | [2025-05-02T17:32:52.123+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:32:52.124+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:32:59.614+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:32:59.616+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:33:04.647+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:33:04.648+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:33:09.681+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:33:09.682+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:33:14.724+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:33:14.729+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:33:17.793+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:17.799+0200] {dag.py:2517} INFO - Setting next_dagrun for example_workday_timetable to 2025-05-02 00:00:00+00:00, run_after=2025-05-03 00:00:00+00:00
dag-processor | [2025-05-02T17:33:17.834+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:17.840+0200] {dag.py:2517} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
dag-processor | [2025-05-02T17:33:17.880+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:17.888+0200] {dag.py:2517} INFO - Setting next_dagrun for example_bash_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:17.920+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:17.924+0200] {dag.py:2517} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
dag-processor | [2025-05-02T17:33:17.994+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:17.998+0200] {dag.py:2517} INFO - Setting next_dagrun for example_short_circuit_operator to None, run_after=None
dag-processor | [2025-05-02T17:33:18.027+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:18.031+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
dag-processor | [2025-05-02T17:33:18.069+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:18.075+0200] {dag.py:2517} INFO - Setting next_dagrun for example_skip_dag to 2025-05-02 15:33:18.075532+00:00, run_after=2025-05-02 15:33:18.075532+00:00
dag-processor | [2025-05-02T17:33:18.143+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:18.151+0200] {dag.py:2517} INFO - Setting next_dagrun for example_nested_branch_dag to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:18.183+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:18.186+0200] {dag.py:2517} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to None, run_after=None
dag-processor | [2025-05-02T17:33:18.260+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:18.264+0200] {dag.py:2517} INFO - Setting next_dagrun for example_short_circuit_decorator to None, run_after=None
dag-processor | [2025-05-02T17:33:18.300+0200] {dag.py:1894} INFO - Sync 3 DAGs
dag-processor | [2025-05-02T17:33:18.308+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_with_extra_by_context to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:18.311+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_with_extra_by_yield to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:18.313+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_with_extra_from_classic_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:18.362+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:18.366+0200] {dag.py:2517} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
dag-processor | [2025-05-02T17:33:18.427+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:18.435+0200] {dag.py:2517} INFO - Setting next_dagrun for example_complex to None, run_after=None
dag-processor | [2025-05-02T17:33:18.470+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:18.478+0200] {dag.py:2517} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2025-05-02 15:33:00+00:00, run_after=2025-05-02 15:33:00+00:00
dag-processor | [2025-05-02T17:33:18.518+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:18.523+0200] {dag.py:2517} INFO - Setting next_dagrun for example_setup_teardown to None, run_after=None
dag-processor | [2025-05-02T17:33:18.628+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:18.633+0200] {dag.py:2517} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
dag-processor | [2025-05-02T17:33:18.671+0200] {dag.py:1894} INFO - Sync 2 DAGs
dag-processor | [2025-05-02T17:33:18.679+0200] {dag.py:2517} INFO - Setting next_dagrun for read_asset_event to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:18.684+0200] {dag.py:2517} INFO - Setting next_dagrun for read_asset_event_from_classic to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:18.728+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:18.733+0200] {dag.py:2517} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
dag-processor | [2025-05-02T17:33:18.785+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:18.793+0200] {dag.py:2517} INFO - Setting next_dagrun for example_sensors to None, run_after=None
dag-processor | [2025-05-02T17:33:18.833+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:18.840+0200] {dag.py:2517} INFO - Setting next_dagrun for example_weekday_branch_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:18.872+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:18.875+0200] {dag.py:2517} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
dag-processor | [2025-05-02T17:33:18.906+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:18.913+0200] {dag.py:2517} INFO - Setting next_dagrun for example_custom_weight to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:18.951+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:18.954+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_taskflow_api_virtualenv to None, run_after=None
dag-processor | [2025-05-02T17:33:18.990+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:18.994+0200] {dag.py:2517} INFO - Setting next_dagrun for example_task_group to None, run_after=None
dag-processor | [2025-05-02T17:33:19.049+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:19.053+0200] {dag.py:2517} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
dag-processor | [2025-05-02T17:33:19.091+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:19.098+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_taskflow_templates to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:19.170+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:19.175+0200] {dag.py:2517} INFO - Setting next_dagrun for example_display_name to None, run_after=None
dag-processor | [2025-05-02T17:33:19.239+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:19.243+0200] {dag.py:2517} INFO - Setting next_dagrun for latest_only_with_trigger to 2025-05-02 15:33:19.243911+00:00, run_after=2025-05-02 15:33:19.243911+00:00
dag-processor | [2025-05-02T17:33:20.244+0200] {manager.py:748} INFO -
dag-processor | ================================================================================
dag-processor | DAG File Processing Stats
dag-processor | Bundle        File Path                                                   PID    Current Duration      # DAGs    # Errors  Last Duration    Last Run At
dag-processor | ------------  ----------------------------------------------------------  -----  ------------------  --------  ----------  ---------------  -------------------
dag-processor | example_dags  example_workday_timetable.py                                                                  1           0  3.07s            2025-05-02T15:33:17
dag-processor | example_dags  example_xcom.py                                                                               1           0  3.11s            2025-05-02T15:33:17
dag-processor | example_dags  example_bash_operator.py                                                                      1           0  3.10s            2025-05-02T15:33:17
dag-processor | example_dags  example_bash_decorator.py                                                                     1           0  0.67s            2025-05-02T15:32:50
dag-processor | example_dags  example_dag_decorator.py                                                                      1           0  3.09s            2025-05-02T15:33:17
dag-processor | example_dags  example_asset_with_watchers.py                                                                1           0  0.64s            2025-05-02T15:32:50
dag-processor | example_dags  plugins/decreasing_priority_weight_strategy.py                                                0           0  3.08s            2025-05-02T15:33:17
dag-processor | example_dags  example_short_circuit_operator.py                                                             1           0  3.08s            2025-05-02T15:33:17
dag-processor | example_dags  tutorial_objectstorage.py                                                                     1           0  3.10s            2025-05-02T15:33:18
dag-processor | example_dags  example_skip_dag.py                                                                           1           0  3.09s            2025-05-02T15:33:18
dag-processor | example_dags  plugins/listener_plugin.py                                                                    0           0  3.09s            2025-05-02T15:33:18
dag-processor | example_dags  example_nested_branch_dag.py                                                                  1           0  3.08s            2025-05-02T15:33:18
dag-processor | example_dags  example_dynamic_task_mapping_with_no_taskflow_operators.py                                    1           0  3.10s            2025-05-02T15:33:18
dag-processor | example_dags  plugins/workday.py                                                                            0           0  3.08s            2025-05-02T15:33:18
dag-processor | example_dags  example_short_circuit_decorator.py                                                            1           0  3.09s            2025-05-02T15:33:18
dag-processor | example_dags  example_outlet_event_extra.py                                                                 3           0  3.11s            2025-05-02T15:33:18
dag-processor | example_dags  example_trigger_target_dag.py                                                                 1           0  3.11s            2025-05-02T15:33:18
dag-processor | example_dags  example_complex.py                                                                            1           0  3.11s            2025-05-02T15:33:18
dag-processor | example_dags  example_passing_params_via_test_command.py                                                    1           0  3.11s            2025-05-02T15:33:18
dag-processor | example_dags  example_setup_teardown.py                                                                     1           0  3.10s            2025-05-02T15:33:18
dag-processor | example_dags  example_python_decorator.py                                                                   1           0  3.12s            2025-05-02T15:33:18
dag-processor | example_dags  plugins/event_listener.py                                                                     0           0  3.09s            2025-05-02T15:33:18
dag-processor | example_dags  example_inlet_event_extra.py                                                                  2           0  3.13s            2025-05-02T15:33:18
dag-processor | example_dags  example_sensors.py                                                                            1           0  3.11s            2025-05-02T15:33:18
dag-processor | example_dags  example_trigger_controller_dag.py                                                             1           0  3.11s            2025-05-02T15:33:18
dag-processor | example_dags  example_branch_day_of_week_operator.py                                                        1           0  3.11s            2025-05-02T15:33:18
dag-processor | example_dags  example_sensor_decorator.py                                                                   1           0  3.09s            2025-05-02T15:33:18
dag-processor | example_dags  example_custom_weight.py                                                                      1           0  3.08s            2025-05-02T15:33:18
dag-processor | example_dags  tutorial_taskflow_api_virtualenv.py                                                           1           0  3.09s            2025-05-02T15:33:18
dag-processor | example_dags  example_task_group.py                                                                         1           0  3.09s            2025-05-02T15:33:18
dag-processor | example_dags  example_params_ui_tutorial.py                                                                 1           0  3.11s            2025-05-02T15:33:19
dag-processor | example_dags  tutorial_taskflow_templates.py                                                                1           0  3.11s            2025-05-02T15:33:19
dag-processor | example_dags  example_kubernetes_executor.py                                                                0           0  3.08s            2025-05-02T15:33:19
dag-processor | example_dags  example_display_name.py                                                                       1           0  3.08s            2025-05-02T15:33:19
dag-processor | example_dags  example_local_kubernetes_executor.py                                                          0           0  3.09s            2025-05-02T15:33:19
dag-processor | example_dags  example_latest_only_with_trigger.py                                                           1           0  3.08s            2025-05-02T15:33:19
dag-processor | example_dags  example_setup_teardown_taskflow.py                                                            1           0  0.78s            2025-05-02T15:32:49
dag-processor | example_dags  example_asset_alias_with_no_taskflow.py                                                       4           0  0.64s            2025-05-02T15:32:50
dag-processor | example_dags  example_simplest_dag.py                                                                       1           0  0.81s            2025-05-02T15:32:49
dag-processor | example_dags  example_asset_decorator.py                                                                    3           0  0.65s            2025-05-02T15:32:50
dag-processor | example_dags  example_xcomargs.py                                                                           2           0  0.82s            2025-05-02T15:32:49
dag-processor | example_dags  example_dynamic_task_mapping.py                                                               2           0  0.80s            2025-05-02T15:32:49
dag-processor | example_dags  example_time_delta_sensor_async.py                                                            1           0  0.66s            2025-05-02T15:32:49
dag-processor | example_dags  example_external_task_marker_dag.py                                                           2           0  0.64s            2025-05-02T15:32:49
dag-processor | example_dags  example_branch_labels.py                                                                      1           0  0.65s            2025-05-02T15:32:49
dag-processor | example_dags  example_asset_alias.py                                                                        4           0  0.65s            2025-05-02T15:32:50
dag-processor | example_dags  example_latest_only.py                                                                        1           0  0.65s            2025-05-02T15:32:49
dag-processor | example_dags  tutorial_taskflow_api.py                                                                      1           0  0.65s            2025-05-02T15:32:49
dag-processor | example_dags  tutorial.py                                                                                   1           0  0.65s            2025-05-02T15:32:49
dag-processor | example_dags  example_python_operator.py                                                                    1           0  0.64s            2025-05-02T15:32:50
dag-processor | example_dags  tutorial_dag.py                                                                               1           0  0.63s            2025-05-02T15:32:50
dag-processor | example_dags  example_task_group_decorator.py                                                               1           0  0.76s            2025-05-02T15:32:50
dag-processor | example_dags  example_branch_python_dop_operator_3.py                                                       1           0  0.75s            2025-05-02T15:32:50
dag-processor | example_dags  example_branch_operator.py                                                                    1           0  0.75s            2025-05-02T15:32:50
dag-processor | example_dags  example_branch_datetime_operator.py                                                           3           0  0.75s            2025-05-02T15:32:50
dag-processor | example_dags  example_params_trigger_ui.py                                                                  1           0  0.76s            2025-05-02T15:32:50
dag-processor | example_dags  example_branch_operator_decorator.py                                                          1           0  0.76s            2025-05-02T15:32:50
dag-processor | example_dags  example_assets.py                                                                            10           0  0.76s            2025-05-02T15:32:51
dag-processor | ================================================================================
dag-processor | [2025-05-02T17:33:20.246+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:33:20.248+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:33:20.299+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:20.301+0200] {dag.py:2517} INFO - Setting next_dagrun for example_simplest_dag to None, run_after=None
dag-processor | [2025-05-02T17:33:20.326+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:20.334+0200] {dag.py:2517} INFO - Setting next_dagrun for example_setup_teardown_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:33:20.376+0200] {dag.py:1894} INFO - Sync 2 DAGs
dag-processor | [2025-05-02T17:33:20.380+0200] {dag.py:2517} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
dag-processor | [2025-05-02T17:33:20.382+0200] {dag.py:2517} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
dag-processor | [2025-05-02T17:33:20.422+0200] {dag.py:1894} INFO - Sync 2 DAGs
dag-processor | [2025-05-02T17:33:20.426+0200] {dag.py:2517} INFO - Setting next_dagrun for example_dynamic_task_mapping to None, run_after=None
dag-processor | [2025-05-02T17:33:20.427+0200] {dag.py:2517} INFO - Setting next_dagrun for example_task_mapping_second_order to None, run_after=None
dag-processor | [2025-05-02T17:33:20.460+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:20.464+0200] {dag.py:2517} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
dag-processor | [2025-05-02T17:33:20.505+0200] {dag.py:1894} INFO - Sync 2 DAGs
dag-processor | [2025-05-02T17:33:20.508+0200] {dag.py:2517} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
dag-processor | [2025-05-02T17:33:20.510+0200] {dag.py:2517} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
dag-processor | [2025-05-02T17:33:20.546+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:20.553+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_labels to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:20.585+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:20.590+0200] {dag.py:2517} INFO - Setting next_dagrun for latest_only to 2025-05-02 15:33:20.590176+00:00, run_after=2025-05-02 15:33:20.590176+00:00
dag-processor | [2025-05-02T17:33:20.625+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:20.629+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
dag-processor | [2025-05-02T17:33:20.660+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:20.665+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial to 2025-05-02 15:33:20.665243+00:00, run_after=2025-05-02 15:33:20.665243+00:00
dag-processor | [2025-05-02T17:33:20.704+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:20.708+0200] {dag.py:2517} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
dag-processor | [2025-05-02T17:33:20.744+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:20.749+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
dag-processor | [2025-05-02T17:33:20.799+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:20.805+0200] {dag.py:2517} INFO - Setting next_dagrun for example_task_group_decorator to None, run_after=None
dag-processor | [2025-05-02T17:33:20.837+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:20.846+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2025-05-02 15:33:00+00:00, run_after=2025-05-02 15:33:00+00:00
dag-processor | [2025-05-02T17:33:20.892+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:20.901+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:20.941+0200] {dag.py:1894} INFO - Sync 3 DAGs
dag-processor | [2025-05-02T17:33:20.948+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:20.951+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:20.953+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:21.003+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:21.008+0200] {dag.py:2517} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
dag-processor | [2025-05-02T17:33:21.057+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:21.071+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_python_operator_decorator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:21.114+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:21.119+0200] {dag.py:2517} INFO - Setting next_dagrun for example_bash_decorator to None, run_after=None
dag-processor | [2025-05-02T17:33:21.150+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:21.155+0200] {dag.py:2517} INFO - Setting next_dagrun for example_asset_with_watchers to None, run_after=None
dag-processor | [2025-05-02T17:33:21.196+0200] {dag.py:1894} INFO - Sync 4 DAGs
dag-processor | [2025-05-02T17:33:21.202+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_alias_example_alias_consumer_with_no_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:33:21.204+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_alias_example_alias_producer_with_no_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:33:21.205+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_s3_bucket_consumer_with_no_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:33:21.205+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_s3_bucket_producer_with_no_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:33:21.252+0200] {dag.py:1894} INFO - Sync 3 DAGs
dag-processor | [2025-05-02T17:33:21.257+0200] {dag.py:2517} INFO - Setting next_dagrun for asset1_producer to None, run_after=None
dag-processor | [2025-05-02T17:33:21.259+0200] {dag.py:2517} INFO - Setting next_dagrun for asset2_producer to None, run_after=None
dag-processor | [2025-05-02T17:33:21.260+0200] {dag.py:2517} INFO - Setting next_dagrun for consumes_asset_decorator to None, run_after=None
dag-processor | [2025-05-02T17:33:21.310+0200] {dag.py:1894} INFO - Sync 4 DAGs
dag-processor | [2025-05-02T17:33:21.316+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_alias_example_alias_consumer to None, run_after=None
dag-processor | [2025-05-02T17:33:21.318+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_alias_example_alias_producer to None, run_after=None
dag-processor | [2025-05-02T17:33:21.319+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_s3_bucket_consumer to None, run_after=None
dag-processor | [2025-05-02T17:33:21.319+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_s3_bucket_producer to None, run_after=None
dag-processor | [2025-05-02T17:33:21.379+0200] {dag.py:1894} INFO - Sync 10 DAGs
dag-processor | [2025-05-02T17:33:21.385+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_consumes_1 to None, run_after=None
dag-processor | [2025-05-02T17:33:21.386+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_consumes_1_and_2 to None, run_after=None
dag-processor | [2025-05-02T17:33:21.387+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_consumes_1_never_scheduled to None, run_after=None
dag-processor | [2025-05-02T17:33:21.388+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_consumes_unknown_never_scheduled to None, run_after=None
dag-processor | [2025-05-02T17:33:21.390+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_produces_1 to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:21.391+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_produces_2 to None, run_after=None
dag-processor | [2025-05-02T17:33:21.393+0200] {dag.py:2517} INFO - Setting next_dagrun for conditional_asset_and_time_based_timetable to 2025-04-30 01:00:00+00:00, run_after=2025-04-30 01:00:00+00:00
dag-processor | [2025-05-02T17:33:21.394+0200] {dag.py:2517} INFO - Setting next_dagrun for consume_1_and_2_with_asset_expressions to None, run_after=None
dag-processor | [2025-05-02T17:33:21.395+0200] {dag.py:2517} INFO - Setting next_dagrun for consume_1_or_2_with_asset_expressions to None, run_after=None
dag-processor | [2025-05-02T17:33:21.396+0200] {dag.py:2517} INFO - Setting next_dagrun for consume_1_or_both_2_and_3_with_asset_expressions to None, run_after=None
dag-processor | [2025-05-02T17:33:25.419+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:33:25.421+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:33:32.643+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:33:32.645+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:33:37.674+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:33:37.675+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:33:42.705+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:33:42.706+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:33:47.737+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:33:47.739+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:33:47.882+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:47.887+0200] {dag.py:2517} INFO - Setting next_dagrun for example_workday_timetable to 2025-05-02 00:00:00+00:00, run_after=2025-05-03 00:00:00+00:00
dag-processor | [2025-05-02T17:33:47.926+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:47.933+0200] {dag.py:2517} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
dag-processor | [2025-05-02T17:33:47.979+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:47.988+0200] {dag.py:2517} INFO - Setting next_dagrun for example_bash_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:48.033+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:48.040+0200] {dag.py:2517} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
dag-processor | [2025-05-02T17:33:48.119+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:48.126+0200] {dag.py:2517} INFO - Setting next_dagrun for example_short_circuit_operator to None, run_after=None
dag-processor | [2025-05-02T17:33:48.162+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:48.167+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
dag-processor | [2025-05-02T17:33:48.220+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:48.228+0200] {dag.py:2517} INFO - Setting next_dagrun for example_skip_dag to 2025-05-02 15:33:48.228213+00:00, run_after=2025-05-02 15:33:48.228213+00:00
dag-processor | [2025-05-02T17:33:48.305+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:48.314+0200] {dag.py:2517} INFO - Setting next_dagrun for example_nested_branch_dag to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:48.348+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:48.352+0200] {dag.py:2517} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to None, run_after=None
dag-processor | [2025-05-02T17:33:48.425+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:48.432+0200] {dag.py:2517} INFO - Setting next_dagrun for example_short_circuit_decorator to None, run_after=None
dag-processor | [2025-05-02T17:33:48.472+0200] {dag.py:1894} INFO - Sync 3 DAGs
dag-processor | [2025-05-02T17:33:48.481+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_with_extra_by_context to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:48.483+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_with_extra_by_yield to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:48.485+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_with_extra_from_classic_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:48.531+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:48.535+0200] {dag.py:2517} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
dag-processor | [2025-05-02T17:33:48.597+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:48.606+0200] {dag.py:2517} INFO - Setting next_dagrun for example_complex to None, run_after=None
dag-processor | [2025-05-02T17:33:48.648+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:48.659+0200] {dag.py:2517} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2025-05-02 15:33:00+00:00, run_after=2025-05-02 15:33:00+00:00
dag-processor | [2025-05-02T17:33:48.702+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:48.707+0200] {dag.py:2517} INFO - Setting next_dagrun for example_setup_teardown to None, run_after=None
dag-processor | [2025-05-02T17:33:48.764+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:48.769+0200] {dag.py:2517} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
dag-processor | [2025-05-02T17:33:48.844+0200] {dag.py:1894} INFO - Sync 2 DAGs
dag-processor | [2025-05-02T17:33:48.852+0200] {dag.py:2517} INFO - Setting next_dagrun for read_asset_event to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:48.855+0200] {dag.py:2517} INFO - Setting next_dagrun for read_asset_event_from_classic to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:48.899+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:48.907+0200] {dag.py:2517} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
dag-processor | [2025-05-02T17:33:48.957+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:48.963+0200] {dag.py:2517} INFO - Setting next_dagrun for example_sensors to None, run_after=None
dag-processor | [2025-05-02T17:33:49.006+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:49.015+0200] {dag.py:2517} INFO - Setting next_dagrun for example_weekday_branch_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:49.051+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:49.055+0200] {dag.py:2517} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
dag-processor | [2025-05-02T17:33:49.095+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:49.106+0200] {dag.py:2517} INFO - Setting next_dagrun for example_custom_weight to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:49.153+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:49.158+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_taskflow_api_virtualenv to None, run_after=None
dag-processor | [2025-05-02T17:33:49.198+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:49.204+0200] {dag.py:2517} INFO - Setting next_dagrun for example_task_group to None, run_after=None
dag-processor | [2025-05-02T17:33:49.263+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:49.267+0200] {dag.py:2517} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
dag-processor | [2025-05-02T17:33:49.311+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:49.324+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_taskflow_templates to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:49.428+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:49.435+0200] {dag.py:2517} INFO - Setting next_dagrun for example_display_name to None, run_after=None
dag-processor | [2025-05-02T17:33:49.529+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:49.534+0200] {dag.py:2517} INFO - Setting next_dagrun for latest_only_with_trigger to 2025-05-02 15:33:49.534364+00:00, run_after=2025-05-02 15:33:49.534364+00:00
dag-processor | [2025-05-02T17:33:50.585+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:50.588+0200] {dag.py:2517} INFO - Setting next_dagrun for example_simplest_dag to None, run_after=None
dag-processor | [2025-05-02T17:33:50.618+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:50.623+0200] {dag.py:2517} INFO - Setting next_dagrun for example_setup_teardown_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:33:50.663+0200] {dag.py:1894} INFO - Sync 2 DAGs
dag-processor | [2025-05-02T17:33:50.667+0200] {dag.py:2517} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
dag-processor | [2025-05-02T17:33:50.668+0200] {dag.py:2517} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
dag-processor | [2025-05-02T17:33:50.704+0200] {dag.py:1894} INFO - Sync 2 DAGs
dag-processor | [2025-05-02T17:33:50.709+0200] {dag.py:2517} INFO - Setting next_dagrun for example_dynamic_task_mapping to None, run_after=None
dag-processor | [2025-05-02T17:33:50.711+0200] {dag.py:2517} INFO - Setting next_dagrun for example_task_mapping_second_order to None, run_after=None
dag-processor | [2025-05-02T17:33:50.745+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:50.749+0200] {dag.py:2517} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
dag-processor | [2025-05-02T17:33:50.785+0200] {dag.py:1894} INFO - Sync 2 DAGs
dag-processor | [2025-05-02T17:33:50.789+0200] {dag.py:2517} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
dag-processor | [2025-05-02T17:33:50.790+0200] {dag.py:2517} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
dag-processor | [2025-05-02T17:33:50.830+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:50.841+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_labels to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:50.878+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:50.883+0200] {dag.py:2517} INFO - Setting next_dagrun for latest_only to 2025-05-02 15:33:50.883587+00:00, run_after=2025-05-02 15:33:50.883587+00:00
dag-processor | [2025-05-02T17:33:50.919+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:50.923+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
dag-processor | [2025-05-02T17:33:50.956+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:50.963+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial to 2025-05-02 15:33:50.963746+00:00, run_after=2025-05-02 15:33:50.963746+00:00
dag-processor | [2025-05-02T17:33:51.007+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:51.012+0200] {dag.py:2517} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
dag-processor | [2025-05-02T17:33:51.044+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:51.048+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
dag-processor | [2025-05-02T17:33:51.095+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:51.101+0200] {dag.py:2517} INFO - Setting next_dagrun for example_task_group_decorator to None, run_after=None
dag-processor | [2025-05-02T17:33:51.133+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:51.142+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2025-05-02 15:33:00+00:00, run_after=2025-05-02 15:33:00+00:00
dag-processor | [2025-05-02T17:33:51.189+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:51.198+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:51.235+0200] {dag.py:1894} INFO - Sync 3 DAGs
dag-processor | [2025-05-02T17:33:51.242+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:51.245+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:51.247+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:51.301+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:51.306+0200] {dag.py:2517} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
dag-processor | [2025-05-02T17:33:51.354+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:51.368+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_python_operator_decorator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:51.412+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:51.418+0200] {dag.py:2517} INFO - Setting next_dagrun for example_bash_decorator to None, run_after=None
dag-processor | [2025-05-02T17:33:51.448+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:33:51.454+0200] {dag.py:2517} INFO - Setting next_dagrun for example_asset_with_watchers to None, run_after=None
dag-processor | [2025-05-02T17:33:51.494+0200] {dag.py:1894} INFO - Sync 4 DAGs
dag-processor | [2025-05-02T17:33:51.500+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_alias_example_alias_consumer_with_no_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:33:51.501+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_alias_example_alias_producer_with_no_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:33:51.502+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_s3_bucket_consumer_with_no_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:33:51.503+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_s3_bucket_producer_with_no_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:33:51.546+0200] {dag.py:1894} INFO - Sync 3 DAGs
dag-processor | [2025-05-02T17:33:51.552+0200] {dag.py:2517} INFO - Setting next_dagrun for asset1_producer to None, run_after=None
dag-processor | [2025-05-02T17:33:51.553+0200] {dag.py:2517} INFO - Setting next_dagrun for asset2_producer to None, run_after=None
dag-processor | [2025-05-02T17:33:51.554+0200] {dag.py:2517} INFO - Setting next_dagrun for consumes_asset_decorator to None, run_after=None
triggerer  | 2025-05-02 17:33:51 [info     ] 0 triggers currently running   [airflow.jobs.triggerer_job_runner]
dag-processor | [2025-05-02T17:33:51.610+0200] {dag.py:1894} INFO - Sync 4 DAGs
dag-processor | [2025-05-02T17:33:51.617+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_alias_example_alias_consumer to None, run_after=None
dag-processor | [2025-05-02T17:33:51.618+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_alias_example_alias_producer to None, run_after=None
dag-processor | [2025-05-02T17:33:51.619+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_s3_bucket_consumer to None, run_after=None
dag-processor | [2025-05-02T17:33:51.620+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_s3_bucket_producer to None, run_after=None
dag-processor | [2025-05-02T17:33:51.687+0200] {dag.py:1894} INFO - Sync 10 DAGs
dag-processor | [2025-05-02T17:33:51.691+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_consumes_1 to None, run_after=None
dag-processor | [2025-05-02T17:33:51.692+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_consumes_1_and_2 to None, run_after=None
dag-processor | [2025-05-02T17:33:51.693+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_consumes_1_never_scheduled to None, run_after=None
dag-processor | [2025-05-02T17:33:51.694+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_consumes_unknown_never_scheduled to None, run_after=None
dag-processor | [2025-05-02T17:33:51.696+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_produces_1 to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:33:51.697+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_produces_2 to None, run_after=None
dag-processor | [2025-05-02T17:33:51.699+0200] {dag.py:2517} INFO - Setting next_dagrun for conditional_asset_and_time_based_timetable to 2025-04-30 01:00:00+00:00, run_after=2025-04-30 01:00:00+00:00
dag-processor | [2025-05-02T17:33:51.700+0200] {dag.py:2517} INFO - Setting next_dagrun for consume_1_and_2_with_asset_expressions to None, run_after=None
dag-processor | [2025-05-02T17:33:51.701+0200] {dag.py:2517} INFO - Setting next_dagrun for consume_1_or_2_with_asset_expressions to None, run_after=None
dag-processor | [2025-05-02T17:33:51.703+0200] {dag.py:2517} INFO - Setting next_dagrun for consume_1_or_both_2_and_3_with_asset_expressions to None, run_after=None
dag-processor | [2025-05-02T17:33:52.693+0200] {manager.py:748} INFO -
dag-processor | ================================================================================
dag-processor | DAG File Processing Stats
dag-processor | Bundle        File Path                                                   PID    Current Duration      # DAGs    # Errors  Last Duration    Last Run At
dag-processor | ------------  ----------------------------------------------------------  -----  ------------------  --------  ----------  ---------------  -------------------
dag-processor | example_dags  example_workday_timetable.py                                                                  1           0  5.27s            2025-05-02T15:33:47
dag-processor | example_dags  example_xcom.py                                                                               1           0  5.31s            2025-05-02T15:33:47
dag-processor | example_dags  example_bash_operator.py                                                                      1           0  5.30s            2025-05-02T15:33:47
dag-processor | example_dags  example_bash_decorator.py                                                                     1           0  5.31s            2025-05-02T15:33:51
dag-processor | example_dags  example_dag_decorator.py                                                                      1           0  5.30s            2025-05-02T15:33:48
dag-processor | example_dags  example_asset_with_watchers.py                                                                1           0  5.28s            2025-05-02T15:33:51
dag-processor | example_dags  plugins/decreasing_priority_weight_strategy.py                                                0           0  5.29s            2025-05-02T15:33:48
dag-processor | example_dags  example_short_circuit_operator.py                                                             1           0  5.28s            2025-05-02T15:33:48
dag-processor | example_dags  tutorial_objectstorage.py                                                                     1           0  5.30s            2025-05-02T15:33:48
dag-processor | example_dags  example_skip_dag.py                                                                           1           0  5.30s            2025-05-02T15:33:48
dag-processor | example_dags  plugins/listener_plugin.py                                                                    0           0  5.30s            2025-05-02T15:33:48
dag-processor | example_dags  example_nested_branch_dag.py                                                                  1           0  5.28s            2025-05-02T15:33:48
dag-processor | example_dags  example_dynamic_task_mapping_with_no_taskflow_operators.py                                    1           0  5.30s            2025-05-02T15:33:48
dag-processor | example_dags  plugins/workday.py                                                                            0           0  5.28s            2025-05-02T15:33:48
dag-processor | example_dags  example_short_circuit_decorator.py                                                            1           0  5.28s            2025-05-02T15:33:48
dag-processor | example_dags  example_outlet_event_extra.py                                                                 3           0  5.30s            2025-05-02T15:33:48
dag-processor | example_dags  example_trigger_target_dag.py                                                                 1           0  5.30s            2025-05-02T15:33:48
dag-processor | example_dags  example_complex.py                                                                            1           0  5.31s            2025-05-02T15:33:48
dag-processor | example_dags  example_passing_params_via_test_command.py                                                    1           0  5.32s            2025-05-02T15:33:48
dag-processor | example_dags  example_setup_teardown.py                                                                     1           0  5.30s            2025-05-02T15:33:48
dag-processor | example_dags  example_python_decorator.py                                                                   1           0  5.30s            2025-05-02T15:33:48
dag-processor | example_dags  plugins/event_listener.py                                                                     0           0  5.28s            2025-05-02T15:33:48
dag-processor | example_dags  example_inlet_event_extra.py                                                                  2           0  5.28s            2025-05-02T15:33:48
dag-processor | example_dags  example_sensors.py                                                                            1           0  5.30s            2025-05-02T15:33:48
dag-processor | example_dags  example_trigger_controller_dag.py                                                             1           0  5.31s            2025-05-02T15:33:48
dag-processor | example_dags  example_branch_day_of_week_operator.py                                                        1           0  5.30s            2025-05-02T15:33:49
dag-processor | example_dags  example_sensor_decorator.py                                                                   1           0  5.29s            2025-05-02T15:33:49
dag-processor | example_dags  example_custom_weight.py                                                                      1           0  5.29s            2025-05-02T15:33:49
dag-processor | example_dags  tutorial_taskflow_api_virtualenv.py                                                           1           0  5.30s            2025-05-02T15:33:49
dag-processor | example_dags  example_task_group.py                                                                         1           0  5.29s            2025-05-02T15:33:49
dag-processor | example_dags  example_params_ui_tutorial.py                                                                 1           0  5.30s            2025-05-02T15:33:49
dag-processor | example_dags  tutorial_taskflow_templates.py                                                                1           0  5.31s            2025-05-02T15:33:49
dag-processor | example_dags  example_kubernetes_executor.py                                                                0           0  5.30s            2025-05-02T15:33:49
dag-processor | example_dags  example_display_name.py                                                                       1           0  5.30s            2025-05-02T15:33:49
dag-processor | example_dags  example_local_kubernetes_executor.py                                                          0           0  5.33s            2025-05-02T15:33:49
dag-processor | example_dags  example_latest_only_with_trigger.py                                                           1           0  5.28s            2025-05-02T15:33:49
dag-processor | example_dags  example_setup_teardown_taskflow.py                                                            1           0  5.31s            2025-05-02T15:33:50
dag-processor | example_dags  example_asset_alias_with_no_taskflow.py                                                       4           0  5.28s            2025-05-02T15:33:51
dag-processor | example_dags  example_simplest_dag.py                                                                       1           0  5.27s            2025-05-02T15:33:50
dag-processor | example_dags  example_asset_decorator.py                                                                    3           0  5.30s            2025-05-02T15:33:51
dag-processor | example_dags  example_xcomargs.py                                                                           2           0  5.28s            2025-05-02T15:33:50
dag-processor | example_dags  example_dynamic_task_mapping.py                                                               2           0  5.28s            2025-05-02T15:33:50
dag-processor | example_dags  example_time_delta_sensor_async.py                                                            1           0  5.28s            2025-05-02T15:33:50
dag-processor | example_dags  example_external_task_marker_dag.py                                                           2           0  5.28s            2025-05-02T15:33:50
dag-processor | example_dags  example_branch_labels.py                                                                      1           0  5.28s            2025-05-02T15:33:50
dag-processor | example_dags  example_asset_alias.py                                                                        4           0  5.30s            2025-05-02T15:33:51
dag-processor | example_dags  example_latest_only.py                                                                        1           0  5.29s            2025-05-02T15:33:50
dag-processor | example_dags  tutorial_taskflow_api.py                                                                      1           0  5.28s            2025-05-02T15:33:50
dag-processor | example_dags  tutorial.py                                                                                   1           0  5.28s            2025-05-02T15:33:50
dag-processor | example_dags  example_python_operator.py                                                                    1           0  5.29s            2025-05-02T15:33:51
dag-processor | example_dags  tutorial_dag.py                                                                               1           0  5.28s            2025-05-02T15:33:51
dag-processor | example_dags  example_task_group_decorator.py                                                               1           0  5.29s            2025-05-02T15:33:51
dag-processor | example_dags  example_branch_python_dop_operator_3.py                                                       1           0  5.29s            2025-05-02T15:33:51
dag-processor | example_dags  example_branch_operator.py                                                                    1           0  5.29s            2025-05-02T15:33:51
dag-processor | example_dags  example_branch_datetime_operator.py                                                           3           0  5.30s            2025-05-02T15:33:51
dag-processor | example_dags  example_params_trigger_ui.py                                                                  1           0  5.30s            2025-05-02T15:33:51
dag-processor | example_dags  example_branch_operator_decorator.py                                                          1           0  5.30s            2025-05-02T15:33:51
dag-processor | example_dags  example_assets.py                                                                            10           0  5.33s            2025-05-02T15:33:51
dag-processor | ================================================================================
dag-processor | [2025-05-02T17:33:52.756+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:33:52.757+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:33:57.785+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:33:57.786+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:34:02.789+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:34:02.790+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:34:10.182+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:34:10.183+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:34:15.217+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:34:15.218+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:34:18.279+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:18.284+0200] {dag.py:2517} INFO - Setting next_dagrun for example_workday_timetable to 2025-05-02 00:00:00+00:00, run_after=2025-05-03 00:00:00+00:00
dag-processor | [2025-05-02T17:34:18.318+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:18.324+0200] {dag.py:2517} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
dag-processor | [2025-05-02T17:34:18.363+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:18.374+0200] {dag.py:2517} INFO - Setting next_dagrun for example_bash_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:18.410+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:18.414+0200] {dag.py:2517} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
dag-processor | [2025-05-02T17:34:18.484+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:18.490+0200] {dag.py:2517} INFO - Setting next_dagrun for example_short_circuit_operator to None, run_after=None
dag-processor | [2025-05-02T17:34:18.521+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:18.524+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
dag-processor | [2025-05-02T17:34:18.589+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:18.599+0200] {dag.py:2517} INFO - Setting next_dagrun for example_skip_dag to 2025-05-02 15:34:18.598999+00:00, run_after=2025-05-02 15:34:18.598999+00:00
dag-processor | [2025-05-02T17:34:18.721+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:18.732+0200] {dag.py:2517} INFO - Setting next_dagrun for example_nested_branch_dag to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:18.769+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:18.772+0200] {dag.py:2517} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to None, run_after=None
dag-processor | [2025-05-02T17:34:18.851+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:18.855+0200] {dag.py:2517} INFO - Setting next_dagrun for example_short_circuit_decorator to None, run_after=None
dag-processor | [2025-05-02T17:34:18.888+0200] {dag.py:1894} INFO - Sync 3 DAGs
dag-processor | [2025-05-02T17:34:18.896+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_with_extra_by_context to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:18.898+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_with_extra_by_yield to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:18.901+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_with_extra_from_classic_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:18.946+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:18.949+0200] {dag.py:2517} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
dag-processor | [2025-05-02T17:34:19.013+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:19.021+0200] {dag.py:2517} INFO - Setting next_dagrun for example_complex to None, run_after=None
dag-processor | [2025-05-02T17:34:19.072+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:19.083+0200] {dag.py:2517} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2025-05-02 15:34:00+00:00, run_after=2025-05-02 15:34:00+00:00
dag-processor | [2025-05-02T17:34:19.151+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:19.163+0200] {dag.py:2517} INFO - Setting next_dagrun for example_setup_teardown to None, run_after=None
dag-processor | [2025-05-02T17:34:19.224+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:19.228+0200] {dag.py:2517} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
dag-processor | [2025-05-02T17:34:19.303+0200] {dag.py:1894} INFO - Sync 2 DAGs
dag-processor | [2025-05-02T17:34:19.312+0200] {dag.py:2517} INFO - Setting next_dagrun for read_asset_event to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:19.315+0200] {dag.py:2517} INFO - Setting next_dagrun for read_asset_event_from_classic to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:19.366+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:19.374+0200] {dag.py:2517} INFO - Setting next_dagrun for example_sensors to None, run_after=None
dag-processor | [2025-05-02T17:34:19.410+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:19.417+0200] {dag.py:2517} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
dag-processor | [2025-05-02T17:34:19.459+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:19.469+0200] {dag.py:2517} INFO - Setting next_dagrun for example_weekday_branch_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:19.521+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:19.527+0200] {dag.py:2517} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
dag-processor | [2025-05-02T17:34:19.566+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:19.573+0200] {dag.py:2517} INFO - Setting next_dagrun for example_custom_weight to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:19.612+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:19.616+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_taskflow_api_virtualenv to None, run_after=None
dag-processor | [2025-05-02T17:34:19.651+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:19.657+0200] {dag.py:2517} INFO - Setting next_dagrun for example_task_group to None, run_after=None
dag-processor | [2025-05-02T17:34:19.713+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:19.717+0200] {dag.py:2517} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
dag-processor | [2025-05-02T17:34:19.748+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:19.756+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_taskflow_templates to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:19.824+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:19.828+0200] {dag.py:2517} INFO - Setting next_dagrun for example_display_name to None, run_after=None
dag-processor | [2025-05-02T17:34:19.892+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:19.897+0200] {dag.py:2517} INFO - Setting next_dagrun for latest_only_with_trigger to 2025-05-02 15:34:19.897374+00:00, run_after=2025-05-02 15:34:19.897374+00:00
dag-processor | [2025-05-02T17:34:20.898+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:34:20.899+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:34:20.951+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:20.954+0200] {dag.py:2517} INFO - Setting next_dagrun for example_simplest_dag to None, run_after=None
dag-processor | [2025-05-02T17:34:20.975+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:20.983+0200] {dag.py:2517} INFO - Setting next_dagrun for example_setup_teardown_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:34:21.025+0200] {dag.py:1894} INFO - Sync 2 DAGs
dag-processor | [2025-05-02T17:34:21.028+0200] {dag.py:2517} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
dag-processor | [2025-05-02T17:34:21.030+0200] {dag.py:2517} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
dag-processor | [2025-05-02T17:34:21.065+0200] {dag.py:1894} INFO - Sync 2 DAGs
dag-processor | [2025-05-02T17:34:21.069+0200] {dag.py:2517} INFO - Setting next_dagrun for example_dynamic_task_mapping to None, run_after=None
dag-processor | [2025-05-02T17:34:21.070+0200] {dag.py:2517} INFO - Setting next_dagrun for example_task_mapping_second_order to None, run_after=None
dag-processor | [2025-05-02T17:34:21.103+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:21.107+0200] {dag.py:2517} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
dag-processor | [2025-05-02T17:34:21.140+0200] {dag.py:1894} INFO - Sync 2 DAGs
dag-processor | [2025-05-02T17:34:21.144+0200] {dag.py:2517} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
dag-processor | [2025-05-02T17:34:21.146+0200] {dag.py:2517} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
dag-processor | [2025-05-02T17:34:21.182+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:21.190+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_labels to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:21.222+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:21.227+0200] {dag.py:2517} INFO - Setting next_dagrun for latest_only to 2025-05-02 15:34:21.227643+00:00, run_after=2025-05-02 15:34:21.227643+00:00
dag-processor | [2025-05-02T17:34:21.262+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:21.266+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
dag-processor | [2025-05-02T17:34:21.296+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:21.302+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial to 2025-05-02 15:34:21.301916+00:00, run_after=2025-05-02 15:34:21.301916+00:00
dag-processor | [2025-05-02T17:34:21.346+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:21.351+0200] {dag.py:2517} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
scheduler  | [2025-05-02 17:34:21 +0200] [92958] [INFO] Handling signal: winch
triggerer  | [2025-05-02 17:34:21 +0200] [92933] [INFO] Handling signal: winch
dag-processor | [2025-05-02T17:34:21.387+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:21.392+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
dag-processor | [2025-05-02T17:34:21.445+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:21.452+0200] {dag.py:2517} INFO - Setting next_dagrun for example_task_group_decorator to None, run_after=None
dag-processor | [2025-05-02T17:34:21.487+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:21.498+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2025-05-02 15:34:00+00:00, run_after=2025-05-02 15:34:00+00:00
dag-processor | [2025-05-02T17:34:21.551+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:21.566+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:21.607+0200] {dag.py:1894} INFO - Sync 3 DAGs
dag-processor | [2025-05-02T17:34:21.616+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:21.619+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:21.623+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:21.676+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:21.681+0200] {dag.py:2517} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
dag-processor | [2025-05-02T17:34:21.729+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:21.738+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_python_operator_decorator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:21.777+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:21.781+0200] {dag.py:2517} INFO - Setting next_dagrun for example_bash_decorator to None, run_after=None
dag-processor | [2025-05-02T17:34:21.811+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:21.816+0200] {dag.py:2517} INFO - Setting next_dagrun for example_asset_with_watchers to None, run_after=None
dag-processor | [2025-05-02T17:34:21.860+0200] {dag.py:1894} INFO - Sync 4 DAGs
dag-processor | [2025-05-02T17:34:21.868+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_alias_example_alias_consumer_with_no_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:34:21.869+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_alias_example_alias_producer_with_no_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:34:21.871+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_s3_bucket_consumer_with_no_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:34:21.871+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_s3_bucket_producer_with_no_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:34:21.950+0200] {dag.py:1894} INFO - Sync 3 DAGs
dag-processor | [2025-05-02T17:34:21.956+0200] {dag.py:2517} INFO - Setting next_dagrun for asset1_producer to None, run_after=None
dag-processor | [2025-05-02T17:34:21.957+0200] {dag.py:2517} INFO - Setting next_dagrun for asset2_producer to None, run_after=None
dag-processor | [2025-05-02T17:34:21.958+0200] {dag.py:2517} INFO - Setting next_dagrun for consumes_asset_decorator to None, run_after=None
dag-processor | [2025-05-02T17:34:22.000+0200] {dag.py:1894} INFO - Sync 4 DAGs
dag-processor | [2025-05-02T17:34:22.006+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_alias_example_alias_consumer to None, run_after=None
dag-processor | [2025-05-02T17:34:22.007+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_alias_example_alias_producer to None, run_after=None
dag-processor | [2025-05-02T17:34:22.009+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_s3_bucket_consumer to None, run_after=None
dag-processor | [2025-05-02T17:34:22.009+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_s3_bucket_producer to None, run_after=None
dag-processor | [2025-05-02T17:34:22.080+0200] {dag.py:1894} INFO - Sync 10 DAGs
dag-processor | [2025-05-02T17:34:22.085+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_consumes_1 to None, run_after=None
dag-processor | [2025-05-02T17:34:22.086+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_consumes_1_and_2 to None, run_after=None
dag-processor | [2025-05-02T17:34:22.087+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_consumes_1_never_scheduled to None, run_after=None
dag-processor | [2025-05-02T17:34:22.089+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_consumes_unknown_never_scheduled to None, run_after=None
dag-processor | [2025-05-02T17:34:22.092+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_produces_1 to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:22.093+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_produces_2 to None, run_after=None
dag-processor | [2025-05-02T17:34:22.096+0200] {dag.py:2517} INFO - Setting next_dagrun for conditional_asset_and_time_based_timetable to 2025-04-30 01:00:00+00:00, run_after=2025-04-30 01:00:00+00:00
dag-processor | [2025-05-02T17:34:22.097+0200] {dag.py:2517} INFO - Setting next_dagrun for consume_1_and_2_with_asset_expressions to None, run_after=None
dag-processor | [2025-05-02T17:34:22.098+0200] {dag.py:2517} INFO - Setting next_dagrun for consume_1_or_2_with_asset_expressions to None, run_after=None
dag-processor | [2025-05-02T17:34:22.099+0200] {dag.py:2517} INFO - Setting next_dagrun for consume_1_or_both_2_and_3_with_asset_expressions to None, run_after=None
dag-processor | [2025-05-02T17:34:25.098+0200] {manager.py:748} INFO -
dag-processor | ================================================================================
dag-processor | DAG File Processing Stats
dag-processor | Bundle        File Path                                                   PID    Current Duration      # DAGs    # Errors  Last Duration    Last Run At
dag-processor | ------------  ----------------------------------------------------------  -----  ------------------  --------  ----------  ---------------  -------------------
dag-processor | example_dags  example_workday_timetable.py                                                                  1           0  7.63s            2025-05-02T15:34:18
dag-processor | example_dags  example_xcom.py                                                                               1           0  7.66s            2025-05-02T15:34:18
dag-processor | example_dags  example_bash_operator.py                                                                      1           0  7.64s            2025-05-02T15:34:18
dag-processor | example_dags  example_bash_decorator.py                                                                     1           0  7.67s            2025-05-02T15:34:21
dag-processor | example_dags  example_dag_decorator.py                                                                      1           0  7.65s            2025-05-02T15:34:18
dag-processor | example_dags  example_asset_with_watchers.py                                                                1           0  7.64s            2025-05-02T15:34:21
dag-processor | example_dags  plugins/decreasing_priority_weight_strategy.py                                                0           0  7.64s            2025-05-02T15:34:18
dag-processor | example_dags  example_short_circuit_operator.py                                                             1           0  7.63s            2025-05-02T15:34:18
dag-processor | example_dags  tutorial_objectstorage.py                                                                     1           0  7.66s            2025-05-02T15:34:18
dag-processor | example_dags  example_skip_dag.py                                                                           1           0  7.67s            2025-05-02T15:34:18
dag-processor | example_dags  plugins/listener_plugin.py                                                                    0           0  7.66s            2025-05-02T15:34:18
dag-processor | example_dags  example_nested_branch_dag.py                                                                  1           0  7.68s            2025-05-02T15:34:18
dag-processor | example_dags  example_dynamic_task_mapping_with_no_taskflow_operators.py                                    1           0  7.69s            2025-05-02T15:34:18
dag-processor | example_dags  plugins/workday.py                                                                            0           0  7.64s            2025-05-02T15:34:18
dag-processor | example_dags  example_short_circuit_decorator.py                                                            1           0  7.64s            2025-05-02T15:34:18
dag-processor | example_dags  example_outlet_event_extra.py                                                                 3           0  7.66s            2025-05-02T15:34:18
dag-processor | example_dags  example_trigger_target_dag.py                                                                 1           0  7.66s            2025-05-02T15:34:18
dag-processor | example_dags  example_complex.py                                                                            1           0  7.66s            2025-05-02T15:34:19
dag-processor | example_dags  example_passing_params_via_test_command.py                                                    1           0  7.69s            2025-05-02T15:34:19
dag-processor | example_dags  example_setup_teardown.py                                                                     1           0  7.69s            2025-05-02T15:34:19
dag-processor | example_dags  example_python_decorator.py                                                                   1           0  7.68s            2025-05-02T15:34:19
dag-processor | example_dags  plugins/event_listener.py                                                                     0           0  7.65s            2025-05-02T15:34:19
dag-processor | example_dags  example_inlet_event_extra.py                                                                  2           0  7.64s            2025-05-02T15:34:19
dag-processor | example_dags  example_sensors.py                                                                            1           0  7.69s            2025-05-02T15:34:19
dag-processor | example_dags  example_trigger_controller_dag.py                                                             1           0  7.65s            2025-05-02T15:34:19
dag-processor | example_dags  example_branch_day_of_week_operator.py                                                        1           0  7.65s            2025-05-02T15:34:19
dag-processor | example_dags  example_sensor_decorator.py                                                                   1           0  7.66s            2025-05-02T15:34:19
dag-processor | example_dags  example_custom_weight.py                                                                      1           0  7.65s            2025-05-02T15:34:19
dag-processor | example_dags  tutorial_taskflow_api_virtualenv.py                                                           1           0  7.65s            2025-05-02T15:34:19
dag-processor | example_dags  example_task_group.py                                                                         1           0  7.64s            2025-05-02T15:34:19
dag-processor | example_dags  example_params_ui_tutorial.py                                                                 1           0  7.66s            2025-05-02T15:34:19
dag-processor | example_dags  tutorial_taskflow_templates.py                                                                1           0  7.66s            2025-05-02T15:34:19
dag-processor | example_dags  example_kubernetes_executor.py                                                                0           0  7.64s            2025-05-02T15:34:19
dag-processor | example_dags  example_display_name.py                                                                       1           0  7.63s            2025-05-02T15:34:19
dag-processor | example_dags  example_local_kubernetes_executor.py                                                          0           0  7.65s            2025-05-02T15:34:19
dag-processor | example_dags  example_latest_only_with_trigger.py                                                           1           0  7.63s            2025-05-02T15:34:19
dag-processor | example_dags  example_setup_teardown_taskflow.py                                                            1           0  7.67s            2025-05-02T15:34:20
dag-processor | example_dags  example_asset_alias_with_no_taskflow.py                                                       4           0  7.65s            2025-05-02T15:34:21
dag-processor | example_dags  example_simplest_dag.py                                                                       1           0  7.63s            2025-05-02T15:34:20
dag-processor | example_dags  example_asset_decorator.py                                                                    3           0  7.70s            2025-05-02T15:34:21
dag-processor | example_dags  example_xcomargs.py                                                                           2           0  7.64s            2025-05-02T15:34:21
dag-processor | example_dags  example_dynamic_task_mapping.py                                                               2           0  7.65s            2025-05-02T15:34:21
dag-processor | example_dags  example_time_delta_sensor_async.py                                                            1           0  7.64s            2025-05-02T15:34:21
dag-processor | example_dags  example_external_task_marker_dag.py                                                           2           0  7.63s            2025-05-02T15:34:21
dag-processor | example_dags  example_branch_labels.py                                                                      1           0  7.64s            2025-05-02T15:34:21
dag-processor | example_dags  example_asset_alias.py                                                                        4           0  7.65s            2025-05-02T15:34:22
dag-processor | example_dags  example_latest_only.py                                                                        1           0  7.64s            2025-05-02T15:34:21
dag-processor | example_dags  tutorial_taskflow_api.py                                                                      1           0  7.64s            2025-05-02T15:34:21
dag-processor | example_dags  tutorial.py                                                                                   1           0  7.64s            2025-05-02T15:34:21
dag-processor | example_dags  example_python_operator.py                                                                    1           0  7.65s            2025-05-02T15:34:21
dag-processor | example_dags  tutorial_dag.py                                                                               1           0  7.65s            2025-05-02T15:34:21
dag-processor | example_dags  example_task_group_decorator.py                                                               1           0  7.66s            2025-05-02T15:34:21
dag-processor | example_dags  example_branch_python_dop_operator_3.py                                                       1           0  7.66s            2025-05-02T15:34:21
dag-processor | example_dags  example_branch_operator.py                                                                    1           0  7.66s            2025-05-02T15:34:21
dag-processor | example_dags  example_branch_datetime_operator.py                                                           3           0  7.67s            2025-05-02T15:34:21
dag-processor | example_dags  example_params_trigger_ui.py                                                                  1           0  7.68s            2025-05-02T15:34:21
dag-processor | example_dags  example_branch_operator_decorator.py                                                          1           0  7.66s            2025-05-02T15:34:21
dag-processor | example_dags  example_assets.py                                                                            10           0  7.68s            2025-05-02T15:34:22
dag-processor | ================================================================================
dag-processor | [2025-05-02T17:34:26.105+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:34:26.106+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:34:31.135+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:34:31.136+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:34:36.162+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:34:36.163+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:34:43.604+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:34:43.606+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:34:48.430+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:48.439+0200] {dag.py:2517} INFO - Setting next_dagrun for example_workday_timetable to 2025-05-02 00:00:00+00:00, run_after=2025-05-03 00:00:00+00:00
dag-processor | [2025-05-02T17:34:48.499+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:48.506+0200] {dag.py:2517} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
dag-processor | [2025-05-02T17:34:48.550+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:48.561+0200] {dag.py:2517} INFO - Setting next_dagrun for example_bash_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:48.597+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:48.602+0200] {dag.py:2517} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
dag-processor | [2025-05-02T17:34:48.630+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:34:48.631+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:34:48.694+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:48.701+0200] {dag.py:2517} INFO - Setting next_dagrun for example_short_circuit_operator to None, run_after=None
dag-processor | [2025-05-02T17:34:48.740+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:48.745+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
dag-processor | [2025-05-02T17:34:48.801+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:48.809+0200] {dag.py:2517} INFO - Setting next_dagrun for example_skip_dag to 2025-05-02 15:34:48.809308+00:00, run_after=2025-05-02 15:34:48.809308+00:00
dag-processor | [2025-05-02T17:34:48.897+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:48.907+0200] {dag.py:2517} INFO - Setting next_dagrun for example_nested_branch_dag to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:48.951+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:48.957+0200] {dag.py:2517} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to None, run_after=None
dag-processor | [2025-05-02T17:34:49.058+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:49.066+0200] {dag.py:2517} INFO - Setting next_dagrun for example_short_circuit_decorator to None, run_after=None
dag-processor | [2025-05-02T17:34:49.114+0200] {dag.py:1894} INFO - Sync 3 DAGs
dag-processor | [2025-05-02T17:34:49.127+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_with_extra_by_context to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:49.132+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_with_extra_by_yield to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:49.136+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_with_extra_from_classic_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:49.203+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:49.208+0200] {dag.py:2517} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
dag-processor | [2025-05-02T17:34:49.285+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:49.294+0200] {dag.py:2517} INFO - Setting next_dagrun for example_complex to None, run_after=None
dag-processor | [2025-05-02T17:34:49.338+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:49.350+0200] {dag.py:2517} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2025-05-02 15:34:00+00:00, run_after=2025-05-02 15:34:00+00:00
dag-processor | [2025-05-02T17:34:49.413+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:49.420+0200] {dag.py:2517} INFO - Setting next_dagrun for example_setup_teardown to None, run_after=None
dag-processor | [2025-05-02T17:34:49.506+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:49.513+0200] {dag.py:2517} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
dag-processor | [2025-05-02T17:34:49.621+0200] {dag.py:1894} INFO - Sync 2 DAGs
dag-processor | [2025-05-02T17:34:49.631+0200] {dag.py:2517} INFO - Setting next_dagrun for read_asset_event to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:49.636+0200] {dag.py:2517} INFO - Setting next_dagrun for read_asset_event_from_classic to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:49.719+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:49.730+0200] {dag.py:2517} INFO - Setting next_dagrun for example_sensors to None, run_after=None
dag-processor | [2025-05-02T17:34:49.778+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:49.786+0200] {dag.py:2517} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
dag-processor | [2025-05-02T17:34:49.846+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:49.859+0200] {dag.py:2517} INFO - Setting next_dagrun for example_weekday_branch_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:49.937+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:49.944+0200] {dag.py:2517} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
dag-processor | [2025-05-02T17:34:50.011+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:50.029+0200] {dag.py:2517} INFO - Setting next_dagrun for example_custom_weight to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:50.096+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:50.104+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_taskflow_api_virtualenv to None, run_after=None
dag-processor | [2025-05-02T17:34:50.156+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:50.164+0200] {dag.py:2517} INFO - Setting next_dagrun for example_task_group to None, run_after=None
dag-processor | [2025-05-02T17:34:50.277+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:50.286+0200] {dag.py:2517} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
dag-processor | [2025-05-02T17:34:50.340+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:50.354+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_taskflow_templates to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:50.480+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:50.488+0200] {dag.py:2517} INFO - Setting next_dagrun for example_display_name to None, run_after=None
dag-processor | [2025-05-02T17:34:50.574+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:50.582+0200] {dag.py:2517} INFO - Setting next_dagrun for latest_only_with_trigger to 2025-05-02 15:34:50.581869+00:00, run_after=2025-05-02 15:34:50.581869+00:00
dag-processor | [2025-05-02T17:34:51.665+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:51.669+0200] {dag.py:2517} INFO - Setting next_dagrun for example_simplest_dag to None, run_after=None
dag-processor | [2025-05-02T17:34:51.694+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:51.704+0200] {dag.py:2517} INFO - Setting next_dagrun for example_setup_teardown_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:34:51.758+0200] {dag.py:1894} INFO - Sync 2 DAGs
dag-processor | [2025-05-02T17:34:51.762+0200] {dag.py:2517} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
dag-processor | [2025-05-02T17:34:51.764+0200] {dag.py:2517} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
dag-processor | [2025-05-02T17:34:51.807+0200] {dag.py:1894} INFO - Sync 2 DAGs
dag-processor | [2025-05-02T17:34:51.811+0200] {dag.py:2517} INFO - Setting next_dagrun for example_dynamic_task_mapping to None, run_after=None
dag-processor | [2025-05-02T17:34:51.813+0200] {dag.py:2517} INFO - Setting next_dagrun for example_task_mapping_second_order to None, run_after=None
dag-processor | [2025-05-02T17:34:51.848+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:51.852+0200] {dag.py:2517} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
dag-processor | [2025-05-02T17:34:51.889+0200] {dag.py:1894} INFO - Sync 2 DAGs
dag-processor | [2025-05-02T17:34:51.893+0200] {dag.py:2517} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
dag-processor | [2025-05-02T17:34:51.894+0200] {dag.py:2517} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
dag-processor | [2025-05-02T17:34:51.933+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:51.941+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_labels to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:51.982+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:51.990+0200] {dag.py:2517} INFO - Setting next_dagrun for latest_only to 2025-05-02 15:34:51.989937+00:00, run_after=2025-05-02 15:34:51.989937+00:00
dag-processor | [2025-05-02T17:34:52.036+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:52.040+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
dag-processor | [2025-05-02T17:34:52.073+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:52.078+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial to 2025-05-02 15:34:52.078148+00:00, run_after=2025-05-02 15:34:52.078148+00:00
dag-processor | [2025-05-02T17:34:52.121+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:52.126+0200] {dag.py:2517} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
dag-processor | [2025-05-02T17:34:52.159+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:52.164+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
dag-processor | [2025-05-02T17:34:52.222+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:52.229+0200] {dag.py:2517} INFO - Setting next_dagrun for example_task_group_decorator to None, run_after=None
dag-processor | [2025-05-02T17:34:52.266+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:52.281+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2025-05-02 15:34:00+00:00, run_after=2025-05-02 15:34:00+00:00
dag-processor | [2025-05-02T17:34:52.337+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:52.348+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:52.384+0200] {dag.py:1894} INFO - Sync 3 DAGs
dag-processor | [2025-05-02T17:34:52.391+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:52.394+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:52.396+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:52.448+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:52.454+0200] {dag.py:2517} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
dag-processor | [2025-05-02T17:34:52.512+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:52.522+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_python_operator_decorator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:52.572+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:52.579+0200] {dag.py:2517} INFO - Setting next_dagrun for example_bash_decorator to None, run_after=None
dag-processor | [2025-05-02T17:34:52.619+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:34:52.624+0200] {dag.py:2517} INFO - Setting next_dagrun for example_asset_with_watchers to None, run_after=None
dag-processor | [2025-05-02T17:34:52.684+0200] {dag.py:1894} INFO - Sync 4 DAGs
dag-processor | [2025-05-02T17:34:52.696+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_alias_example_alias_consumer_with_no_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:34:52.698+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_alias_example_alias_producer_with_no_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:34:52.699+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_s3_bucket_consumer_with_no_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:34:52.700+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_s3_bucket_producer_with_no_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:34:52.770+0200] {dag.py:1894} INFO - Sync 3 DAGs
dag-processor | [2025-05-02T17:34:52.778+0200] {dag.py:2517} INFO - Setting next_dagrun for asset1_producer to None, run_after=None
dag-processor | [2025-05-02T17:34:52.780+0200] {dag.py:2517} INFO - Setting next_dagrun for asset2_producer to None, run_after=None
dag-processor | [2025-05-02T17:34:52.782+0200] {dag.py:2517} INFO - Setting next_dagrun for consumes_asset_decorator to None, run_after=None
dag-processor | [2025-05-02T17:34:52.848+0200] {dag.py:1894} INFO - Sync 4 DAGs
dag-processor | [2025-05-02T17:34:52.857+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_alias_example_alias_consumer to None, run_after=None
dag-processor | [2025-05-02T17:34:52.858+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_alias_example_alias_producer to None, run_after=None
dag-processor | [2025-05-02T17:34:52.859+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_s3_bucket_consumer to None, run_after=None
dag-processor | [2025-05-02T17:34:52.860+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_s3_bucket_producer to None, run_after=None
dag-processor | [2025-05-02T17:34:52.926+0200] {dag.py:1894} INFO - Sync 10 DAGs
dag-processor | [2025-05-02T17:34:52.931+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_consumes_1 to None, run_after=None
dag-processor | [2025-05-02T17:34:52.932+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_consumes_1_and_2 to None, run_after=None
dag-processor | [2025-05-02T17:34:52.933+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_consumes_1_never_scheduled to None, run_after=None
dag-processor | [2025-05-02T17:34:52.934+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_consumes_unknown_never_scheduled to None, run_after=None
dag-processor | [2025-05-02T17:34:52.936+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_produces_1 to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:34:52.937+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_produces_2 to None, run_after=None
dag-processor | [2025-05-02T17:34:52.939+0200] {dag.py:2517} INFO - Setting next_dagrun for conditional_asset_and_time_based_timetable to 2025-04-30 01:00:00+00:00, run_after=2025-04-30 01:00:00+00:00
dag-processor | [2025-05-02T17:34:52.940+0200] {dag.py:2517} INFO - Setting next_dagrun for consume_1_and_2_with_asset_expressions to None, run_after=None
dag-processor | [2025-05-02T17:34:52.942+0200] {dag.py:2517} INFO - Setting next_dagrun for consume_1_or_2_with_asset_expressions to None, run_after=None
dag-processor | [2025-05-02T17:34:52.943+0200] {dag.py:2517} INFO - Setting next_dagrun for consume_1_or_both_2_and_3_with_asset_expressions to None, run_after=None
dag-processor | [2025-05-02T17:34:53.932+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:34:53.934+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
triggerer  | 2025-05-02 17:34:56 [info     ] 0 triggers currently running   [airflow.jobs.triggerer_job_runner]
dag-processor | [2025-05-02T17:34:57.960+0200] {manager.py:748} INFO -
dag-processor | ================================================================================
dag-processor | DAG File Processing Stats
dag-processor | Bundle        File Path                                                   PID    Current Duration      # DAGs    # Errors  Last Duration    Last Run At
dag-processor | ------------  ----------------------------------------------------------  -----  ------------------  --------  ----------  ---------------  -------------------
dag-processor | example_dags  example_workday_timetable.py                                                                  1           0  10.06s           2025-05-02T15:34:48
dag-processor | example_dags  example_xcom.py                                                                               1           0  10.12s           2025-05-02T15:34:48
dag-processor | example_dags  example_bash_operator.py                                                                      1           0  10.07s           2025-05-02T15:34:48
dag-processor | example_dags  example_bash_decorator.py                                                                     1           0  10.08s           2025-05-02T15:34:52
dag-processor | example_dags  example_dag_decorator.py                                                                      1           0  10.06s           2025-05-02T15:34:48
dag-processor | example_dags  example_asset_with_watchers.py                                                                1           0  10.06s           2025-05-02T15:34:52
dag-processor | example_dags  plugins/decreasing_priority_weight_strategy.py                                                0           0  10.05s           2025-05-02T15:34:48
dag-processor | example_dags  example_short_circuit_operator.py                                                             1           0  10.04s           2025-05-02T15:34:48
dag-processor | example_dags  tutorial_objectstorage.py                                                                     1           0  10.07s           2025-05-02T15:34:48
dag-processor | example_dags  example_skip_dag.py                                                                           1           0  10.06s           2025-05-02T15:34:48
dag-processor | example_dags  plugins/listener_plugin.py                                                                    0           0  10.05s           2025-05-02T15:34:48
dag-processor | example_dags  example_nested_branch_dag.py                                                                  1           0  10.05s           2025-05-02T15:34:48
dag-processor | example_dags  example_dynamic_task_mapping_with_no_taskflow_operators.py                                    1           0  10.08s           2025-05-02T15:34:48
dag-processor | example_dags  plugins/workday.py                                                                            0           0  10.06s           2025-05-02T15:34:49
dag-processor | example_dags  example_short_circuit_decorator.py                                                            1           0  10.06s           2025-05-02T15:34:49
dag-processor | example_dags  example_outlet_event_extra.py                                                                 3           0  10.08s           2025-05-02T15:34:49
dag-processor | example_dags  example_trigger_target_dag.py                                                                 1           0  10.09s           2025-05-02T15:34:49
dag-processor | example_dags  example_complex.py                                                                            1           0  10.09s           2025-05-02T15:34:49
dag-processor | example_dags  example_passing_params_via_test_command.py                                                    1           0  10.09s           2025-05-02T15:34:49
dag-processor | example_dags  example_setup_teardown.py                                                                     1           0  10.08s           2025-05-02T15:34:49
dag-processor | example_dags  example_python_decorator.py                                                                   1           0  10.11s           2025-05-02T15:34:49
dag-processor | example_dags  plugins/event_listener.py                                                                     0           0  10.08s           2025-05-02T15:34:49
dag-processor | example_dags  example_inlet_event_extra.py                                                                  2           0  10.06s           2025-05-02T15:34:49
dag-processor | example_dags  example_sensors.py                                                                            1           0  10.13s           2025-05-02T15:34:49
dag-processor | example_dags  example_trigger_controller_dag.py                                                             1           0  10.09s           2025-05-02T15:34:49
dag-processor | example_dags  example_branch_day_of_week_operator.py                                                        1           0  10.07s           2025-05-02T15:34:49
dag-processor | example_dags  example_sensor_decorator.py                                                                   1           0  10.10s           2025-05-02T15:34:49
dag-processor | example_dags  example_custom_weight.py                                                                      1           0  10.09s           2025-05-02T15:34:50
dag-processor | example_dags  tutorial_taskflow_api_virtualenv.py                                                           1           0  10.10s           2025-05-02T15:34:50
dag-processor | example_dags  example_task_group.py                                                                         1           0  10.07s           2025-05-02T15:34:50
dag-processor | example_dags  example_params_ui_tutorial.py                                                                 1           0  10.13s           2025-05-02T15:34:50
dag-processor | example_dags  tutorial_taskflow_templates.py                                                                1           0  10.12s           2025-05-02T15:34:50
dag-processor | example_dags  example_kubernetes_executor.py                                                                0           0  10.07s           2025-05-02T15:34:50
dag-processor | example_dags  example_display_name.py                                                                       1           0  10.07s           2025-05-02T15:34:50
dag-processor | example_dags  example_local_kubernetes_executor.py                                                          0           0  10.07s           2025-05-02T15:34:50
dag-processor | example_dags  example_latest_only_with_trigger.py                                                           1           0  10.04s           2025-05-02T15:34:50
dag-processor | example_dags  example_setup_teardown_taskflow.py                                                            1           0  10.08s           2025-05-02T15:34:51
dag-processor | example_dags  example_asset_alias_with_no_taskflow.py                                                       4           0  10.06s           2025-05-02T15:34:52
dag-processor | example_dags  example_simplest_dag.py                                                                       1           0  10.05s           2025-05-02T15:34:51
dag-processor | example_dags  example_asset_decorator.py                                                                    3           0  10.10s           2025-05-02T15:34:52
dag-processor | example_dags  example_xcomargs.py                                                                           2           0  10.05s           2025-05-02T15:34:51
dag-processor | example_dags  example_dynamic_task_mapping.py                                                               2           0  10.06s           2025-05-02T15:34:51
dag-processor | example_dags  example_time_delta_sensor_async.py                                                            1           0  10.05s           2025-05-02T15:34:51
dag-processor | example_dags  example_external_task_marker_dag.py                                                           2           0  10.04s           2025-05-02T15:34:51
dag-processor | example_dags  example_branch_labels.py                                                                      1           0  10.04s           2025-05-02T15:34:51
dag-processor | example_dags  example_asset_alias.py                                                                        4           0  10.09s           2025-05-02T15:34:52
dag-processor | example_dags  example_latest_only.py                                                                        1           0  10.05s           2025-05-02T15:34:51
dag-processor | example_dags  tutorial_taskflow_api.py                                                                      1           0  10.06s           2025-05-02T15:34:52
dag-processor | example_dags  tutorial.py                                                                                   1           0  10.04s           2025-05-02T15:34:52
dag-processor | example_dags  example_python_operator.py                                                                    1           0  10.04s           2025-05-02T15:34:52
dag-processor | example_dags  tutorial_dag.py                                                                               1           0  10.04s           2025-05-02T15:34:52
dag-processor | example_dags  example_task_group_decorator.py                                                               1           0  10.06s           2025-05-02T15:34:52
dag-processor | example_dags  example_branch_python_dop_operator_3.py                                                       1           0  10.07s           2025-05-02T15:34:52
dag-processor | example_dags  example_branch_operator.py                                                                    1           0  10.07s           2025-05-02T15:34:52
dag-processor | example_dags  example_branch_datetime_operator.py                                                           3           0  10.05s           2025-05-02T15:34:52
dag-processor | example_dags  example_params_trigger_ui.py                                                                  1           0  10.07s           2025-05-02T15:34:52
dag-processor | example_dags  example_branch_operator_decorator.py                                                          1           0  10.07s           2025-05-02T15:34:52
dag-processor | example_dags  example_assets.py                                                                            10           0  10.09s           2025-05-02T15:34:52
dag-processor | ================================================================================
dag-processor | [2025-05-02T17:34:58.968+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:34:58.969+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:35:04.000+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:35:04.001+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:35:09.034+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:35:09.035+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:35:16.375+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:35:16.376+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:35:18.556+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:18.564+0200] {dag.py:2517} INFO - Setting next_dagrun for example_workday_timetable to 2025-05-02 00:00:00+00:00, run_after=2025-05-03 00:00:00+00:00
dag-processor | [2025-05-02T17:35:18.605+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:18.611+0200] {dag.py:2517} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
dag-processor | [2025-05-02T17:35:18.654+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:18.662+0200] {dag.py:2517} INFO - Setting next_dagrun for example_bash_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:18.718+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:18.723+0200] {dag.py:2517} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
dag-processor | [2025-05-02T17:35:18.816+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:18.824+0200] {dag.py:2517} INFO - Setting next_dagrun for example_short_circuit_operator to None, run_after=None
dag-processor | [2025-05-02T17:35:18.861+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:18.870+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
dag-processor | [2025-05-02T17:35:18.922+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:18.930+0200] {dag.py:2517} INFO - Setting next_dagrun for example_skip_dag to 2025-05-02 15:35:18.930766+00:00, run_after=2025-05-02 15:35:18.930766+00:00
dag-processor | [2025-05-02T17:35:19.016+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:19.027+0200] {dag.py:2517} INFO - Setting next_dagrun for example_nested_branch_dag to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:19.070+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:19.074+0200] {dag.py:2517} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to None, run_after=None
dag-processor | [2025-05-02T17:35:19.162+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:19.168+0200] {dag.py:2517} INFO - Setting next_dagrun for example_short_circuit_decorator to None, run_after=None
dag-processor | [2025-05-02T17:35:19.201+0200] {dag.py:1894} INFO - Sync 3 DAGs
dag-processor | [2025-05-02T17:35:19.206+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_with_extra_by_context to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:19.208+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_with_extra_by_yield to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:19.210+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_with_extra_from_classic_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:19.306+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:19.314+0200] {dag.py:2517} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
dag-processor | [2025-05-02T17:35:19.396+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:19.406+0200] {dag.py:2517} INFO - Setting next_dagrun for example_complex to None, run_after=None
dag-processor | [2025-05-02T17:35:19.448+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:19.457+0200] {dag.py:2517} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2025-05-02 15:35:00+00:00, run_after=2025-05-02 15:35:00+00:00
dag-processor | [2025-05-02T17:35:19.496+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:19.499+0200] {dag.py:2517} INFO - Setting next_dagrun for example_setup_teardown to None, run_after=None
dag-processor | [2025-05-02T17:35:19.590+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:19.595+0200] {dag.py:2517} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
dag-processor | [2025-05-02T17:35:19.680+0200] {dag.py:1894} INFO - Sync 2 DAGs
dag-processor | [2025-05-02T17:35:19.688+0200] {dag.py:2517} INFO - Setting next_dagrun for read_asset_event to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:19.690+0200] {dag.py:2517} INFO - Setting next_dagrun for read_asset_event_from_classic to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:20.763+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:20.771+0200] {dag.py:2517} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
dag-processor | [2025-05-02T17:35:20.830+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:20.840+0200] {dag.py:2517} INFO - Setting next_dagrun for example_sensors to None, run_after=None
dag-processor | [2025-05-02T17:35:20.901+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:20.911+0200] {dag.py:2517} INFO - Setting next_dagrun for example_weekday_branch_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:20.974+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:20.979+0200] {dag.py:2517} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
dag-processor | [2025-05-02T17:35:21.072+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:21.084+0200] {dag.py:2517} INFO - Setting next_dagrun for example_custom_weight to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:21.150+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:21.155+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_taskflow_api_virtualenv to None, run_after=None
dag-processor | [2025-05-02T17:35:21.216+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:21.225+0200] {dag.py:2517} INFO - Setting next_dagrun for example_task_group to None, run_after=None
dag-processor | [2025-05-02T17:35:21.297+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:21.302+0200] {dag.py:2517} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
dag-processor | [2025-05-02T17:35:21.347+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:21.358+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_taskflow_templates to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:21.397+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:35:21.399+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:35:21.474+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:21.480+0200] {dag.py:2517} INFO - Setting next_dagrun for example_display_name to None, run_after=None
dag-processor | [2025-05-02T17:35:21.563+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:21.570+0200] {dag.py:2517} INFO - Setting next_dagrun for latest_only_with_trigger to 2025-05-02 15:35:21.569928+00:00, run_after=2025-05-02 15:35:21.569928+00:00
dag-processor | [2025-05-02T17:35:22.649+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:22.653+0200] {dag.py:2517} INFO - Setting next_dagrun for example_simplest_dag to None, run_after=None
dag-processor | [2025-05-02T17:35:22.689+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:22.695+0200] {dag.py:2517} INFO - Setting next_dagrun for example_setup_teardown_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:35:22.742+0200] {dag.py:1894} INFO - Sync 2 DAGs
dag-processor | [2025-05-02T17:35:22.746+0200] {dag.py:2517} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
dag-processor | [2025-05-02T17:35:22.748+0200] {dag.py:2517} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
dag-processor | [2025-05-02T17:35:22.800+0200] {dag.py:1894} INFO - Sync 2 DAGs
dag-processor | [2025-05-02T17:35:22.804+0200] {dag.py:2517} INFO - Setting next_dagrun for example_dynamic_task_mapping to None, run_after=None
dag-processor | [2025-05-02T17:35:22.806+0200] {dag.py:2517} INFO - Setting next_dagrun for example_task_mapping_second_order to None, run_after=None
dag-processor | [2025-05-02T17:35:22.848+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:22.852+0200] {dag.py:2517} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
dag-processor | [2025-05-02T17:35:22.893+0200] {dag.py:1894} INFO - Sync 2 DAGs
dag-processor | [2025-05-02T17:35:22.897+0200] {dag.py:2517} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
dag-processor | [2025-05-02T17:35:22.898+0200] {dag.py:2517} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
dag-processor | [2025-05-02T17:35:22.945+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:22.954+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_labels to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:22.996+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:23.002+0200] {dag.py:2517} INFO - Setting next_dagrun for latest_only to 2025-05-02 15:35:23.002314+00:00, run_after=2025-05-02 15:35:23.002314+00:00
dag-processor | [2025-05-02T17:35:23.053+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:23.059+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
dag-processor | [2025-05-02T17:35:23.100+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:23.106+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial to 2025-05-02 15:35:23.106715+00:00, run_after=2025-05-02 15:35:23.106715+00:00
dag-processor | [2025-05-02T17:35:23.169+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:23.177+0200] {dag.py:2517} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
dag-processor | [2025-05-02T17:35:23.223+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:23.227+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
dag-processor | [2025-05-02T17:35:23.292+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:23.298+0200] {dag.py:2517} INFO - Setting next_dagrun for example_task_group_decorator to None, run_after=None
dag-processor | [2025-05-02T17:35:23.335+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:23.344+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2025-05-02 15:35:00+00:00, run_after=2025-05-02 15:35:00+00:00
dag-processor | [2025-05-02T17:35:23.401+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:23.411+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:23.462+0200] {dag.py:1894} INFO - Sync 3 DAGs
dag-processor | [2025-05-02T17:35:23.471+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:23.474+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:23.477+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:23.541+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:23.547+0200] {dag.py:2517} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
dag-processor | [2025-05-02T17:35:23.605+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:23.616+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_python_operator_decorator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:23.668+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:23.674+0200] {dag.py:2517} INFO - Setting next_dagrun for example_bash_decorator to None, run_after=None
dag-processor | [2025-05-02T17:35:23.710+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:23.716+0200] {dag.py:2517} INFO - Setting next_dagrun for example_asset_with_watchers to None, run_after=None
dag-processor | [2025-05-02T17:35:23.762+0200] {dag.py:1894} INFO - Sync 4 DAGs
dag-processor | [2025-05-02T17:35:23.769+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_alias_example_alias_consumer_with_no_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:35:23.771+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_alias_example_alias_producer_with_no_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:35:23.772+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_s3_bucket_consumer_with_no_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:35:23.772+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_s3_bucket_producer_with_no_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:35:23.825+0200] {dag.py:1894} INFO - Sync 3 DAGs
dag-processor | [2025-05-02T17:35:23.832+0200] {dag.py:2517} INFO - Setting next_dagrun for asset1_producer to None, run_after=None
dag-processor | [2025-05-02T17:35:23.833+0200] {dag.py:2517} INFO - Setting next_dagrun for asset2_producer to None, run_after=None
dag-processor | [2025-05-02T17:35:23.834+0200] {dag.py:2517} INFO - Setting next_dagrun for consumes_asset_decorator to None, run_after=None
dag-processor | [2025-05-02T17:35:23.883+0200] {dag.py:1894} INFO - Sync 4 DAGs
dag-processor | [2025-05-02T17:35:23.890+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_alias_example_alias_consumer to None, run_after=None
dag-processor | [2025-05-02T17:35:23.891+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_alias_example_alias_producer to None, run_after=None
dag-processor | [2025-05-02T17:35:23.892+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_s3_bucket_consumer to None, run_after=None
dag-processor | [2025-05-02T17:35:23.893+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_s3_bucket_producer to None, run_after=None
dag-processor | [2025-05-02T17:35:23.965+0200] {dag.py:1894} INFO - Sync 10 DAGs
dag-processor | [2025-05-02T17:35:23.970+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_consumes_1 to None, run_after=None
dag-processor | [2025-05-02T17:35:23.971+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_consumes_1_and_2 to None, run_after=None
dag-processor | [2025-05-02T17:35:23.972+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_consumes_1_never_scheduled to None, run_after=None
dag-processor | [2025-05-02T17:35:23.973+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_consumes_unknown_never_scheduled to None, run_after=None
dag-processor | [2025-05-02T17:35:23.975+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_produces_1 to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:23.976+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_produces_2 to None, run_after=None
dag-processor | [2025-05-02T17:35:23.979+0200] {dag.py:2517} INFO - Setting next_dagrun for conditional_asset_and_time_based_timetable to 2025-04-30 01:00:00+00:00, run_after=2025-04-30 01:00:00+00:00
dag-processor | [2025-05-02T17:35:23.980+0200] {dag.py:2517} INFO - Setting next_dagrun for consume_1_and_2_with_asset_expressions to None, run_after=None
dag-processor | [2025-05-02T17:35:23.981+0200] {dag.py:2517} INFO - Setting next_dagrun for consume_1_or_2_with_asset_expressions to None, run_after=None
dag-processor | [2025-05-02T17:35:23.982+0200] {dag.py:2517} INFO - Setting next_dagrun for consume_1_or_both_2_and_3_with_asset_expressions to None, run_after=None
dag-processor | [2025-05-02T17:35:26.984+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:35:26.986+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:35:31.009+0200] {manager.py:748} INFO -
dag-processor | ================================================================================
dag-processor | DAG File Processing Stats
dag-processor | Bundle        File Path                                                   PID    Current Duration      # DAGs    # Errors  Last Duration    Last Run At
dag-processor | ------------  ----------------------------------------------------------  -----  ------------------  --------  ----------  ---------------  -------------------
dag-processor | example_dags  example_workday_timetable.py                                                                  1           0  12.34s           2025-05-02T15:35:18
dag-processor | example_dags  example_xcom.py                                                                               1           0  12.38s           2025-05-02T15:35:18
dag-processor | example_dags  example_bash_operator.py                                                                      1           0  12.35s           2025-05-02T15:35:18
dag-processor | example_dags  example_bash_decorator.py                                                                     1           0  12.39s           2025-05-02T15:35:23
dag-processor | example_dags  example_dag_decorator.py                                                                      1           0  12.37s           2025-05-02T15:35:18
dag-processor | example_dags  example_asset_with_watchers.py                                                                1           0  12.35s           2025-05-02T15:35:23
dag-processor | example_dags  plugins/decreasing_priority_weight_strategy.py                                                0           0  12.35s           2025-05-02T15:35:18
dag-processor | example_dags  example_short_circuit_operator.py                                                             1           0  12.36s           2025-05-02T15:35:18
dag-processor | example_dags  tutorial_objectstorage.py                                                                     1           0  12.37s           2025-05-02T15:35:18
dag-processor | example_dags  example_skip_dag.py                                                                           1           0  12.36s           2025-05-02T15:35:18
dag-processor | example_dags  plugins/listener_plugin.py                                                                    0           0  12.35s           2025-05-02T15:35:18
dag-processor | example_dags  example_nested_branch_dag.py                                                                  1           0  12.35s           2025-05-02T15:35:19
dag-processor | example_dags  example_dynamic_task_mapping_with_no_taskflow_operators.py                                    1           0  12.38s           2025-05-02T15:35:19
dag-processor | example_dags  plugins/workday.py                                                                            0           0  12.34s           2025-05-02T15:35:19
dag-processor | example_dags  example_short_circuit_decorator.py                                                            1           0  12.35s           2025-05-02T15:35:19
dag-processor | example_dags  example_outlet_event_extra.py                                                                 3           0  12.37s           2025-05-02T15:35:19
dag-processor | example_dags  example_trigger_target_dag.py                                                                 1           0  12.35s           2025-05-02T15:35:19
dag-processor | example_dags  example_complex.py                                                                            1           0  12.40s           2025-05-02T15:35:19
dag-processor | example_dags  example_passing_params_via_test_command.py                                                    1           0  12.39s           2025-05-02T15:35:19
dag-processor | example_dags  example_setup_teardown.py                                                                     1           0  12.36s           2025-05-02T15:35:19
dag-processor | example_dags  example_python_decorator.py                                                                   1           0  12.36s           2025-05-02T15:35:19
dag-processor | example_dags  plugins/event_listener.py                                                                     0           0  12.34s           2025-05-02T15:35:19
dag-processor | example_dags  example_inlet_event_extra.py                                                                  2           0  12.34s           2025-05-02T15:35:19
dag-processor | example_dags  example_sensors.py                                                                            1           0  12.43s           2025-05-02T15:35:20
dag-processor | example_dags  example_trigger_controller_dag.py                                                             1           0  12.36s           2025-05-02T15:35:20
dag-processor | example_dags  example_branch_day_of_week_operator.py                                                        1           0  12.38s           2025-05-02T15:35:20
dag-processor | example_dags  example_sensor_decorator.py                                                                   1           0  12.38s           2025-05-02T15:35:20
dag-processor | example_dags  example_custom_weight.py                                                                      1           0  12.40s           2025-05-02T15:35:21
dag-processor | example_dags  tutorial_taskflow_api_virtualenv.py                                                           1           0  12.39s           2025-05-02T15:35:21
dag-processor | example_dags  example_task_group.py                                                                         1           0  12.39s           2025-05-02T15:35:21
dag-processor | example_dags  example_params_ui_tutorial.py                                                                 1           0  12.40s           2025-05-02T15:35:21
dag-processor | example_dags  tutorial_taskflow_templates.py                                                                1           0  12.38s           2025-05-02T15:35:21
dag-processor | example_dags  example_kubernetes_executor.py                                                                0           0  12.38s           2025-05-02T15:35:21
dag-processor | example_dags  example_display_name.py                                                                       1           0  12.35s           2025-05-02T15:35:21
dag-processor | example_dags  example_local_kubernetes_executor.py                                                          0           0  12.37s           2025-05-02T15:35:21
dag-processor | example_dags  example_latest_only_with_trigger.py                                                           1           0  12.34s           2025-05-02T15:35:21
dag-processor | example_dags  example_setup_teardown_taskflow.py                                                            1           0  12.39s           2025-05-02T15:35:22
dag-processor | example_dags  example_asset_alias_with_no_taskflow.py                                                       4           0  12.35s           2025-05-02T15:35:23
dag-processor | example_dags  example_simplest_dag.py                                                                       1           0  12.35s           2025-05-02T15:35:22
dag-processor | example_dags  example_asset_decorator.py                                                                    3           0  12.38s           2025-05-02T15:35:23
dag-processor | example_dags  example_xcomargs.py                                                                           2           0  12.35s           2025-05-02T15:35:22
dag-processor | example_dags  example_dynamic_task_mapping.py                                                               2           0  12.37s           2025-05-02T15:35:22
dag-processor | example_dags  example_time_delta_sensor_async.py                                                            1           0  12.36s           2025-05-02T15:35:22
dag-processor | example_dags  example_external_task_marker_dag.py                                                           2           0  12.34s           2025-05-02T15:35:22
dag-processor | example_dags  example_branch_labels.py                                                                      1           0  12.36s           2025-05-02T15:35:22
dag-processor | example_dags  example_asset_alias.py                                                                        4           0  12.36s           2025-05-02T15:35:23
dag-processor | example_dags  example_latest_only.py                                                                        1           0  12.36s           2025-05-02T15:35:22
dag-processor | example_dags  tutorial_taskflow_api.py                                                                      1           0  12.35s           2025-05-02T15:35:23
dag-processor | example_dags  tutorial.py                                                                                   1           0  12.36s           2025-05-02T15:35:23
dag-processor | example_dags  example_python_operator.py                                                                    1           0  12.37s           2025-05-02T15:35:23
dag-processor | example_dags  tutorial_dag.py                                                                               1           0  12.37s           2025-05-02T15:35:23
dag-processor | example_dags  example_task_group_decorator.py                                                               1           0  12.37s           2025-05-02T15:35:23
dag-processor | example_dags  example_branch_python_dop_operator_3.py                                                       1           0  12.38s           2025-05-02T15:35:23
dag-processor | example_dags  example_branch_operator.py                                                                    1           0  12.36s           2025-05-02T15:35:23
dag-processor | example_dags  example_branch_datetime_operator.py                                                           3           0  12.38s           2025-05-02T15:35:23
dag-processor | example_dags  example_params_trigger_ui.py                                                                  1           0  12.39s           2025-05-02T15:35:23
dag-processor | example_dags  example_branch_operator_decorator.py                                                          1           0  12.39s           2025-05-02T15:35:23
dag-processor | example_dags  example_assets.py                                                                            10           0  12.39s           2025-05-02T15:35:23
dag-processor | ================================================================================
dag-processor | [2025-05-02T17:35:32.017+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:35:32.018+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:35:37.046+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:35:37.048+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:35:42.080+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:35:42.081+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:35:47.113+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:35:47.114+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:35:50.434+0200] {dag.py:1894} INFO - Sync 1 DAGs
api-server | INFO:     127.0.0.1:57116 - "POST /auth/token HTTP/1.1" 201 Created
dag-processor | [2025-05-02T17:35:50.440+0200] {dag.py:2517} INFO - Setting next_dagrun for example_workday_timetable to 2025-05-02 00:00:00+00:00, run_after=2025-05-03 00:00:00+00:00
api-server | INFO:     127.0.0.1:57116 - "GET / HTTP/1.1" 200 OK
api-server | INFO:     127.0.0.1:57116 - "GET /static/assets/index-DVWpfKkn.js HTTP/1.1" 304 Not Modified
dag-processor | [2025-05-02T17:35:50.491+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:50.499+0200] {dag.py:2517} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
dag-processor | [2025-05-02T17:35:50.559+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:50.570+0200] {dag.py:2517} INFO - Setting next_dagrun for example_bash_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:50.623+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:50.631+0200] {dag.py:2517} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
dag-processor | [2025-05-02T17:35:50.721+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:50.726+0200] {dag.py:2517} INFO - Setting next_dagrun for example_short_circuit_operator to None, run_after=None
dag-processor | [2025-05-02T17:35:50.760+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:50.763+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
dag-processor | [2025-05-02T17:35:50.806+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:50.812+0200] {dag.py:2517} INFO - Setting next_dagrun for example_skip_dag to 2025-05-02 15:35:50.812466+00:00, run_after=2025-05-02 15:35:50.812466+00:00
api-server | INFO:     127.0.0.1:57116 - "GET /ui/config HTTP/1.1" 200 OK
api-server | INFO:     127.0.0.1:57120 - "GET /static/pin_32.png HTTP/1.1" 304 Not Modified
dag-processor | [2025-05-02T17:35:50.903+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:50.914+0200] {dag.py:2517} INFO - Setting next_dagrun for example_nested_branch_dag to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:50.956+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:50.960+0200] {dag.py:2517} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to None, run_after=None
api-server | INFO:     127.0.0.1:57116 - "GET /ui/auth/menus HTTP/1.1" 200 OK
api-server | INFO:     127.0.0.1:57120 - "GET /api/v2/plugins HTTP/1.1" 200 OK
api-server | INFO:     127.0.0.1:57116 - "GET /api/v2/version HTTP/1.1" 200 OK
dag-processor | [2025-05-02T17:35:51.072+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:51.080+0200] {dag.py:2517} INFO - Setting next_dagrun for example_short_circuit_decorator to None, run_after=None
api-server | INFO:     127.0.0.1:57116 - "GET /api/v2/importErrors HTTP/1.1" 200 OK
api-server | INFO:     127.0.0.1:57120 - "GET /api/v2/monitor/health HTTP/1.1" 200 OK
api-server | INFO:     127.0.0.1:57116 - "GET /ui/dashboard/historical_metrics_data?start_date=2025-05-01T15%3A35%3A49.196Z HTTP/1.1" 200 OK
dag-processor | [2025-05-02T17:35:51.131+0200] {dag.py:1894} INFO - Sync 3 DAGs
api-server | INFO:     127.0.0.1:57120 - "GET /api/v2/assets/events?limit=6&order_by=-timestamp&timestamp_gte=2025-05-01T15%3A35%3A49.196Z&timestamp_lte=2025-05-02T15%3A35%3A49.196Z HTTP/1.1" 200 OK
dag-processor | [2025-05-02T17:35:51.141+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_with_extra_by_context to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:51.143+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_with_extra_by_yield to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:51.146+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_with_extra_from_classic_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:51.191+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:51.195+0200] {dag.py:2517} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
dag-processor | [2025-05-02T17:35:51.261+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:51.268+0200] {dag.py:2517} INFO - Setting next_dagrun for example_complex to None, run_after=None
dag-processor | [2025-05-02T17:35:51.306+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:51.314+0200] {dag.py:2517} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2025-05-02 15:35:00+00:00, run_after=2025-05-02 15:35:00+00:00
dag-processor | [2025-05-02T17:35:51.352+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:51.356+0200] {dag.py:2517} INFO - Setting next_dagrun for example_setup_teardown to None, run_after=None
dag-processor | [2025-05-02T17:35:51.397+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:51.402+0200] {dag.py:2517} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
dag-processor | [2025-05-02T17:35:51.475+0200] {dag.py:1894} INFO - Sync 2 DAGs
dag-processor | [2025-05-02T17:35:51.482+0200] {dag.py:2517} INFO - Setting next_dagrun for read_asset_event to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:51.484+0200] {dag.py:2517} INFO - Setting next_dagrun for read_asset_event_from_classic to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:51.533+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:51.538+0200] {dag.py:2517} INFO - Setting next_dagrun for example_sensors to None, run_after=None
dag-processor | [2025-05-02T17:35:51.570+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:51.575+0200] {dag.py:2517} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
dag-processor | [2025-05-02T17:35:51.616+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:51.626+0200] {dag.py:2517} INFO - Setting next_dagrun for example_weekday_branch_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:51.659+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:51.663+0200] {dag.py:2517} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
dag-processor | [2025-05-02T17:35:51.696+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:51.704+0200] {dag.py:2517} INFO - Setting next_dagrun for example_custom_weight to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:51.741+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:51.745+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_taskflow_api_virtualenv to None, run_after=None
dag-processor | [2025-05-02T17:35:51.784+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:51.791+0200] {dag.py:2517} INFO - Setting next_dagrun for example_task_group to None, run_after=None
dag-processor | [2025-05-02T17:35:51.847+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:51.852+0200] {dag.py:2517} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
dag-processor | [2025-05-02T17:35:51.885+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:51.892+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_taskflow_templates to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:51.972+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:51.978+0200] {dag.py:2517} INFO - Setting next_dagrun for example_display_name to None, run_after=None
dag-processor | [2025-05-02T17:35:52.048+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:52.053+0200] {dag.py:2517} INFO - Setting next_dagrun for latest_only_with_trigger to 2025-05-02 15:35:52.053599+00:00, run_after=2025-05-02 15:35:52.053599+00:00
dag-processor | [2025-05-02T17:35:53.109+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:53.112+0200] {dag.py:2517} INFO - Setting next_dagrun for example_simplest_dag to None, run_after=None
dag-processor | [2025-05-02T17:35:53.136+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:53.144+0200] {dag.py:2517} INFO - Setting next_dagrun for example_setup_teardown_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:35:53.184+0200] {dag.py:1894} INFO - Sync 2 DAGs
dag-processor | [2025-05-02T17:35:53.188+0200] {dag.py:2517} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
dag-processor | [2025-05-02T17:35:53.190+0200] {dag.py:2517} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
dag-processor | [2025-05-02T17:35:53.225+0200] {dag.py:1894} INFO - Sync 2 DAGs
dag-processor | [2025-05-02T17:35:53.229+0200] {dag.py:2517} INFO - Setting next_dagrun for example_dynamic_task_mapping to None, run_after=None
dag-processor | [2025-05-02T17:35:53.231+0200] {dag.py:2517} INFO - Setting next_dagrun for example_task_mapping_second_order to None, run_after=None
dag-processor | [2025-05-02T17:35:53.264+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:53.267+0200] {dag.py:2517} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
dag-processor | [2025-05-02T17:35:53.302+0200] {dag.py:1894} INFO - Sync 2 DAGs
dag-processor | [2025-05-02T17:35:53.306+0200] {dag.py:2517} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
dag-processor | [2025-05-02T17:35:53.307+0200] {dag.py:2517} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
dag-processor | [2025-05-02T17:35:53.344+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:53.351+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_labels to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:53.386+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:53.391+0200] {dag.py:2517} INFO - Setting next_dagrun for latest_only to 2025-05-02 15:35:53.391829+00:00, run_after=2025-05-02 15:35:53.391829+00:00
dag-processor | [2025-05-02T17:35:53.432+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:53.436+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
dag-processor | [2025-05-02T17:35:53.470+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:53.475+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial to 2025-05-02 15:35:53.475760+00:00, run_after=2025-05-02 15:35:53.475760+00:00
dag-processor | [2025-05-02T17:35:53.519+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:53.523+0200] {dag.py:2517} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
dag-processor | [2025-05-02T17:35:53.554+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:53.557+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
dag-processor | [2025-05-02T17:35:53.610+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:53.616+0200] {dag.py:2517} INFO - Setting next_dagrun for example_task_group_decorator to None, run_after=None
dag-processor | [2025-05-02T17:35:53.648+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:53.659+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2025-05-02 15:35:00+00:00, run_after=2025-05-02 15:35:00+00:00
dag-processor | [2025-05-02T17:35:53.712+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:53.725+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:53.764+0200] {dag.py:1894} INFO - Sync 3 DAGs
dag-processor | [2025-05-02T17:35:53.771+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:53.774+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:53.777+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:53.829+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:53.834+0200] {dag.py:2517} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
dag-processor | [2025-05-02T17:35:53.886+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:53.895+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_python_operator_decorator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:53.939+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:53.945+0200] {dag.py:2517} INFO - Setting next_dagrun for example_bash_decorator to None, run_after=None
dag-processor | [2025-05-02T17:35:53.977+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:35:53.983+0200] {dag.py:2517} INFO - Setting next_dagrun for example_asset_with_watchers to None, run_after=None
dag-processor | [2025-05-02T17:35:54.047+0200] {dag.py:1894} INFO - Sync 4 DAGs
dag-processor | [2025-05-02T17:35:54.056+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_alias_example_alias_consumer_with_no_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:35:54.058+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_alias_example_alias_producer_with_no_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:35:54.059+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_s3_bucket_consumer_with_no_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:35:54.060+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_s3_bucket_producer_with_no_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:35:54.115+0200] {dag.py:1894} INFO - Sync 3 DAGs
dag-processor | [2025-05-02T17:35:54.121+0200] {dag.py:2517} INFO - Setting next_dagrun for asset1_producer to None, run_after=None
dag-processor | [2025-05-02T17:35:54.122+0200] {dag.py:2517} INFO - Setting next_dagrun for asset2_producer to None, run_after=None
dag-processor | [2025-05-02T17:35:54.123+0200] {dag.py:2517} INFO - Setting next_dagrun for consumes_asset_decorator to None, run_after=None
dag-processor | [2025-05-02T17:35:54.174+0200] {dag.py:1894} INFO - Sync 4 DAGs
dag-processor | [2025-05-02T17:35:54.180+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_alias_example_alias_consumer to None, run_after=None
dag-processor | [2025-05-02T17:35:54.182+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_alias_example_alias_producer to None, run_after=None
dag-processor | [2025-05-02T17:35:54.182+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_s3_bucket_consumer to None, run_after=None
dag-processor | [2025-05-02T17:35:54.183+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_s3_bucket_producer to None, run_after=None
dag-processor | [2025-05-02T17:35:54.243+0200] {dag.py:1894} INFO - Sync 10 DAGs
dag-processor | [2025-05-02T17:35:54.248+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_consumes_1 to None, run_after=None
dag-processor | [2025-05-02T17:35:54.249+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_consumes_1_and_2 to None, run_after=None
dag-processor | [2025-05-02T17:35:54.250+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_consumes_1_never_scheduled to None, run_after=None
dag-processor | [2025-05-02T17:35:54.251+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_consumes_unknown_never_scheduled to None, run_after=None
dag-processor | [2025-05-02T17:35:54.253+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_produces_1 to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:35:54.254+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_produces_2 to None, run_after=None
dag-processor | [2025-05-02T17:35:54.256+0200] {dag.py:2517} INFO - Setting next_dagrun for conditional_asset_and_time_based_timetable to 2025-04-30 01:00:00+00:00, run_after=2025-04-30 01:00:00+00:00
dag-processor | [2025-05-02T17:35:54.257+0200] {dag.py:2517} INFO - Setting next_dagrun for consume_1_and_2_with_asset_expressions to None, run_after=None
dag-processor | [2025-05-02T17:35:54.258+0200] {dag.py:2517} INFO - Setting next_dagrun for consume_1_or_2_with_asset_expressions to None, run_after=None
dag-processor | [2025-05-02T17:35:54.259+0200] {dag.py:2517} INFO - Setting next_dagrun for consume_1_or_both_2_and_3_with_asset_expressions to None, run_after=None
dag-processor | [2025-05-02T17:35:55.250+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:35:55.251+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:36:00.279+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:36:00.280+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
triggerer  | 2025-05-02 17:36:01 [info     ] 0 triggers currently running   [airflow.jobs.triggerer_job_runner]
dag-processor | [2025-05-02T17:36:03.300+0200] {manager.py:748} INFO -
dag-processor | ================================================================================
dag-processor | DAG File Processing Stats
dag-processor | Bundle        File Path                                                   PID    Current Duration      # DAGs    # Errors  Last Duration    Last Run At
dag-processor | ------------  ----------------------------------------------------------  -----  ------------------  --------  ----------  ---------------  -------------------
dag-processor | example_dags  example_workday_timetable.py                                                                  1           0  14.59s           2025-05-02T15:35:50
dag-processor | example_dags  example_xcom.py                                                                               1           0  14.64s           2025-05-02T15:35:50
dag-processor | example_dags  example_bash_operator.py                                                                      1           0  14.64s           2025-05-02T15:35:50
dag-processor | example_dags  example_bash_decorator.py                                                                     1           0  14.63s           2025-05-02T15:35:53
dag-processor | example_dags  example_dag_decorator.py                                                                      1           0  14.63s           2025-05-02T15:35:50
dag-processor | example_dags  example_asset_with_watchers.py                                                                1           0  14.61s           2025-05-02T15:35:53
dag-processor | example_dags  plugins/decreasing_priority_weight_strategy.py                                                0           0  14.62s           2025-05-02T15:35:50
dag-processor | example_dags  example_short_circuit_operator.py                                                             1           0  14.61s           2025-05-02T15:35:50
dag-processor | example_dags  tutorial_objectstorage.py                                                                     1           0  14.62s           2025-05-02T15:35:50
dag-processor | example_dags  example_skip_dag.py                                                                           1           0  14.61s           2025-05-02T15:35:50
dag-processor | example_dags  plugins/listener_plugin.py                                                                    0           0  14.61s           2025-05-02T15:35:50
dag-processor | example_dags  example_nested_branch_dag.py                                                                  1           0  14.61s           2025-05-02T15:35:50
dag-processor | example_dags  example_dynamic_task_mapping_with_no_taskflow_operators.py                                    1           0  14.65s           2025-05-02T15:35:50
dag-processor | example_dags  plugins/workday.py                                                                            0           0  14.61s           2025-05-02T15:35:51
dag-processor | example_dags  example_short_circuit_decorator.py                                                            1           0  14.63s           2025-05-02T15:35:51
dag-processor | example_dags  example_outlet_event_extra.py                                                                 3           0  14.66s           2025-05-02T15:35:51
dag-processor | example_dags  example_trigger_target_dag.py                                                                 1           0  14.63s           2025-05-02T15:35:51
dag-processor | example_dags  example_complex.py                                                                            1           0  14.63s           2025-05-02T15:35:51
dag-processor | example_dags  example_passing_params_via_test_command.py                                                    1           0  14.64s           2025-05-02T15:35:51
dag-processor | example_dags  example_setup_teardown.py                                                                     1           0  14.61s           2025-05-02T15:35:51
dag-processor | example_dags  example_python_decorator.py                                                                   1           0  14.61s           2025-05-02T15:35:51
dag-processor | example_dags  plugins/event_listener.py                                                                     0           0  14.60s           2025-05-02T15:35:51
dag-processor | example_dags  example_inlet_event_extra.py                                                                  2           0  14.61s           2025-05-02T15:35:51
dag-processor | example_dags  example_sensors.py                                                                            1           0  14.64s           2025-05-02T15:35:51
dag-processor | example_dags  example_trigger_controller_dag.py                                                             1           0  14.61s           2025-05-02T15:35:51
dag-processor | example_dags  example_branch_day_of_week_operator.py                                                        1           0  14.61s           2025-05-02T15:35:51
dag-processor | example_dags  example_sensor_decorator.py                                                                   1           0  14.61s           2025-05-02T15:35:51
dag-processor | example_dags  example_custom_weight.py                                                                      1           0  14.60s           2025-05-02T15:35:51
dag-processor | example_dags  tutorial_taskflow_api_virtualenv.py                                                           1           0  14.60s           2025-05-02T15:35:51
dag-processor | example_dags  example_task_group.py                                                                         1           0  14.60s           2025-05-02T15:35:51
dag-processor | example_dags  example_params_ui_tutorial.py                                                                 1           0  14.63s           2025-05-02T15:35:51
dag-processor | example_dags  tutorial_taskflow_templates.py                                                                1           0  14.62s           2025-05-02T15:35:51
dag-processor | example_dags  example_kubernetes_executor.py                                                                0           0  14.61s           2025-05-02T15:35:51
dag-processor | example_dags  example_display_name.py                                                                       1           0  14.60s           2025-05-02T15:35:51
dag-processor | example_dags  example_local_kubernetes_executor.py                                                          0           0  14.62s           2025-05-02T15:35:52
dag-processor | example_dags  example_latest_only_with_trigger.py                                                           1           0  14.60s           2025-05-02T15:35:52
dag-processor | example_dags  example_setup_teardown_taskflow.py                                                            1           0  14.63s           2025-05-02T15:35:53
dag-processor | example_dags  example_asset_alias_with_no_taskflow.py                                                       4           0  14.63s           2025-05-02T15:35:54
dag-processor | example_dags  example_simplest_dag.py                                                                       1           0  14.60s           2025-05-02T15:35:53
dag-processor | example_dags  example_asset_decorator.py                                                                    3           0  14.65s           2025-05-02T15:35:54
dag-processor | example_dags  example_xcomargs.py                                                                           2           0  14.60s           2025-05-02T15:35:53
dag-processor | example_dags  example_dynamic_task_mapping.py                                                               2           0  14.61s           2025-05-02T15:35:53
dag-processor | example_dags  example_time_delta_sensor_async.py                                                            1           0  14.60s           2025-05-02T15:35:53
dag-processor | example_dags  example_external_task_marker_dag.py                                                           2           0  14.60s           2025-05-02T15:35:53
dag-processor | example_dags  example_branch_labels.py                                                                      1           0  14.60s           2025-05-02T15:35:53
dag-processor | example_dags  example_asset_alias.py                                                                        4           0  14.62s           2025-05-02T15:35:54
dag-processor | example_dags  example_latest_only.py                                                                        1           0  14.61s           2025-05-02T15:35:53
dag-processor | example_dags  tutorial_taskflow_api.py                                                                      1           0  14.60s           2025-05-02T15:35:53
dag-processor | example_dags  tutorial.py                                                                                   1           0  14.60s           2025-05-02T15:35:53
dag-processor | example_dags  example_python_operator.py                                                                    1           0  14.61s           2025-05-02T15:35:53
dag-processor | example_dags  tutorial_dag.py                                                                               1           0  14.60s           2025-05-02T15:35:53
dag-processor | example_dags  example_task_group_decorator.py                                                               1           0  14.62s           2025-05-02T15:35:53
dag-processor | example_dags  example_branch_python_dop_operator_3.py                                                       1           0  14.62s           2025-05-02T15:35:53
dag-processor | example_dags  example_branch_operator.py                                                                    1           0  14.62s           2025-05-02T15:35:53
dag-processor | example_dags  example_branch_datetime_operator.py                                                           3           0  14.63s           2025-05-02T15:35:53
dag-processor | example_dags  example_params_trigger_ui.py                                                                  1           0  14.63s           2025-05-02T15:35:53
dag-processor | example_dags  example_branch_operator_decorator.py                                                          1           0  14.63s           2025-05-02T15:35:53
dag-processor | example_dags  example_assets.py                                                                            10           0  14.63s           2025-05-02T15:35:54
dag-processor | ================================================================================
dag-processor | [2025-05-02T17:36:05.314+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:36:05.316+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:36:10.345+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:36:10.346+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:36:15.372+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:36:15.373+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:36:20.403+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:36:20.404+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:36:20.568+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:20.574+0200] {dag.py:2517} INFO - Setting next_dagrun for example_workday_timetable to 2025-05-02 00:00:00+00:00, run_after=2025-05-03 00:00:00+00:00
dag-processor | [2025-05-02T17:36:20.610+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:20.616+0200] {dag.py:2517} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
dag-processor | [2025-05-02T17:36:20.665+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:20.673+0200] {dag.py:2517} INFO - Setting next_dagrun for example_bash_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:36:20.711+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:20.715+0200] {dag.py:2517} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
dag-processor | [2025-05-02T17:36:20.794+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:20.799+0200] {dag.py:2517} INFO - Setting next_dagrun for example_short_circuit_operator to None, run_after=None
dag-processor | [2025-05-02T17:36:20.841+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:20.845+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
dag-processor | [2025-05-02T17:36:20.884+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:20.890+0200] {dag.py:2517} INFO - Setting next_dagrun for example_skip_dag to 2025-05-02 15:36:20.890713+00:00, run_after=2025-05-02 15:36:20.890713+00:00
dag-processor | [2025-05-02T17:36:20.973+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:20.981+0200] {dag.py:2517} INFO - Setting next_dagrun for example_nested_branch_dag to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:36:21.023+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:21.026+0200] {dag.py:2517} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to None, run_after=None
dag-processor | [2025-05-02T17:36:22.131+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:22.136+0200] {dag.py:2517} INFO - Setting next_dagrun for example_short_circuit_decorator to None, run_after=None
dag-processor | [2025-05-02T17:36:24.433+0200] {dag.py:1894} INFO - Sync 3 DAGs
dag-processor | [2025-05-02T17:36:24.444+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_with_extra_by_context to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:36:24.447+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_with_extra_by_yield to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:36:24.449+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_with_extra_from_classic_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:36:24.492+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:24.496+0200] {dag.py:2517} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
dag-processor | [2025-05-02T17:36:24.551+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:24.559+0200] {dag.py:2517} INFO - Setting next_dagrun for example_complex to None, run_after=None
dag-processor | [2025-05-02T17:36:24.591+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:24.600+0200] {dag.py:2517} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2025-05-02 15:36:00+00:00, run_after=2025-05-02 15:36:00+00:00
dag-processor | [2025-05-02T17:36:24.646+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:24.650+0200] {dag.py:2517} INFO - Setting next_dagrun for example_setup_teardown to None, run_after=None
dag-processor | [2025-05-02T17:36:24.691+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:24.695+0200] {dag.py:2517} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
dag-processor | [2025-05-02T17:36:24.763+0200] {dag.py:1894} INFO - Sync 2 DAGs
dag-processor | [2025-05-02T17:36:24.770+0200] {dag.py:2517} INFO - Setting next_dagrun for read_asset_event to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:36:24.772+0200] {dag.py:2517} INFO - Setting next_dagrun for read_asset_event_from_classic to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:36:24.820+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:24.826+0200] {dag.py:2517} INFO - Setting next_dagrun for example_sensors to None, run_after=None
dag-processor | [2025-05-02T17:36:24.856+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:24.861+0200] {dag.py:2517} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
dag-processor | [2025-05-02T17:36:24.894+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:24.902+0200] {dag.py:2517} INFO - Setting next_dagrun for example_weekday_branch_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:36:24.948+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:24.951+0200] {dag.py:2517} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
dag-processor | [2025-05-02T17:36:24.984+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:24.992+0200] {dag.py:2517} INFO - Setting next_dagrun for example_custom_weight to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:36:25.032+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:25.037+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_taskflow_api_virtualenv to None, run_after=None
dag-processor | [2025-05-02T17:36:25.074+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:25.079+0200] {dag.py:2517} INFO - Setting next_dagrun for example_task_group to None, run_after=None
dag-processor | [2025-05-02T17:36:25.130+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:25.134+0200] {dag.py:2517} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
dag-processor | [2025-05-02T17:36:25.174+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:25.181+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_taskflow_templates to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:36:25.248+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:25.252+0200] {dag.py:2517} INFO - Setting next_dagrun for example_display_name to None, run_after=None
dag-processor | [2025-05-02T17:36:25.323+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:25.328+0200] {dag.py:2517} INFO - Setting next_dagrun for latest_only_with_trigger to 2025-05-02 15:36:25.328581+00:00, run_after=2025-05-02 15:36:25.328581+00:00
dag-processor | [2025-05-02T17:36:25.367+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:25.372+0200] {dag.py:2517} INFO - Setting next_dagrun for example_setup_teardown_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:36:25.403+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:25.406+0200] {dag.py:2517} INFO - Setting next_dagrun for example_simplest_dag to None, run_after=None
dag-processor | [2025-05-02T17:36:25.484+0200] {dag.py:1894} INFO - Sync 2 DAGs
dag-processor | [2025-05-02T17:36:25.487+0200] {dag.py:2517} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
dag-processor | [2025-05-02T17:36:25.488+0200] {dag.py:2517} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
dag-processor | [2025-05-02T17:36:25.502+0200] {dag.py:1894} INFO - Sync 2 DAGs
dag-processor | [2025-05-02T17:36:25.504+0200] {dag.py:2517} INFO - Setting next_dagrun for example_dynamic_task_mapping to None, run_after=None
dag-processor | [2025-05-02T17:36:25.505+0200] {dag.py:2517} INFO - Setting next_dagrun for example_task_mapping_second_order to None, run_after=None
dag-processor | [2025-05-02T17:36:25.566+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:25.569+0200] {dag.py:2517} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
dag-processor | [2025-05-02T17:36:25.607+0200] {dag.py:1894} INFO - Sync 2 DAGs
dag-processor | [2025-05-02T17:36:25.611+0200] {dag.py:2517} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
dag-processor | [2025-05-02T17:36:25.612+0200] {dag.py:2517} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
dag-processor | [2025-05-02T17:36:25.647+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:25.655+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_labels to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:36:25.685+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:25.690+0200] {dag.py:2517} INFO - Setting next_dagrun for latest_only to 2025-05-02 15:36:25.690628+00:00, run_after=2025-05-02 15:36:25.690628+00:00
dag-processor | [2025-05-02T17:36:25.725+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:25.728+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
dag-processor | [2025-05-02T17:36:25.768+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:25.774+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial to 2025-05-02 15:36:25.774023+00:00, run_after=2025-05-02 15:36:25.774023+00:00
dag-processor | [2025-05-02T17:36:25.816+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:25.821+0200] {dag.py:2517} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
dag-processor | [2025-05-02T17:36:25.850+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:25.854+0200] {dag.py:2517} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
dag-processor | [2025-05-02T17:36:25.908+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:25.916+0200] {dag.py:2517} INFO - Setting next_dagrun for example_task_group_decorator to None, run_after=None
dag-processor | [2025-05-02T17:36:25.953+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:25.961+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2025-05-02 15:36:00+00:00, run_after=2025-05-02 15:36:00+00:00
dag-processor | [2025-05-02T17:36:26.010+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:26.019+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:36:26.065+0200] {dag.py:1894} INFO - Sync 3 DAGs
dag-processor | [2025-05-02T17:36:26.072+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_datetime_operator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:36:26.076+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:36:26.079+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:36:26.127+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:26.131+0200] {dag.py:2517} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
dag-processor | [2025-05-02T17:36:26.178+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:26.189+0200] {dag.py:2517} INFO - Setting next_dagrun for example_branch_python_operator_decorator to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:36:26.234+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:26.239+0200] {dag.py:2517} INFO - Setting next_dagrun for example_bash_decorator to None, run_after=None
dag-processor | [2025-05-02T17:36:26.271+0200] {dag.py:1894} INFO - Sync 1 DAGs
dag-processor | [2025-05-02T17:36:26.277+0200] {dag.py:2517} INFO - Setting next_dagrun for example_asset_with_watchers to None, run_after=None
dag-processor | [2025-05-02T17:36:26.326+0200] {dag.py:1894} INFO - Sync 4 DAGs
dag-processor | [2025-05-02T17:36:26.335+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_alias_example_alias_consumer_with_no_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:36:26.337+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_alias_example_alias_producer_with_no_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:36:26.338+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_s3_bucket_consumer_with_no_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:36:26.340+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_s3_bucket_producer_with_no_taskflow to None, run_after=None
dag-processor | [2025-05-02T17:36:26.396+0200] {dag.py:1894} INFO - Sync 3 DAGs
dag-processor | [2025-05-02T17:36:26.403+0200] {dag.py:2517} INFO - Setting next_dagrun for asset1_producer to None, run_after=None
dag-processor | [2025-05-02T17:36:26.404+0200] {dag.py:2517} INFO - Setting next_dagrun for asset2_producer to None, run_after=None
dag-processor | [2025-05-02T17:36:26.405+0200] {dag.py:2517} INFO - Setting next_dagrun for consumes_asset_decorator to None, run_after=None
dag-processor | [2025-05-02T17:36:26.457+0200] {dag.py:1894} INFO - Sync 4 DAGs
dag-processor | [2025-05-02T17:36:26.463+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_alias_example_alias_consumer to None, run_after=None
dag-processor | [2025-05-02T17:36:26.464+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_alias_example_alias_producer to None, run_after=None
dag-processor | [2025-05-02T17:36:26.465+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_s3_bucket_consumer to None, run_after=None
dag-processor | [2025-05-02T17:36:26.466+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_s3_bucket_producer to None, run_after=None
dag-processor | [2025-05-02T17:36:26.540+0200] {dag.py:1894} INFO - Sync 10 DAGs
dag-processor | [2025-05-02T17:36:26.546+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_consumes_1 to None, run_after=None
dag-processor | [2025-05-02T17:36:26.547+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_consumes_1_and_2 to None, run_after=None
dag-processor | [2025-05-02T17:36:26.548+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_consumes_1_never_scheduled to None, run_after=None
dag-processor | [2025-05-02T17:36:26.549+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_consumes_unknown_never_scheduled to None, run_after=None
dag-processor | [2025-05-02T17:36:26.551+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_produces_1 to 2025-05-02 00:00:00+00:00, run_after=2025-05-02 00:00:00+00:00
dag-processor | [2025-05-02T17:36:26.552+0200] {dag.py:2517} INFO - Setting next_dagrun for asset_produces_2 to None, run_after=None
dag-processor | [2025-05-02T17:36:26.554+0200] {dag.py:2517} INFO - Setting next_dagrun for conditional_asset_and_time_based_timetable to 2025-04-30 01:00:00+00:00, run_after=2025-04-30 01:00:00+00:00
dag-processor | [2025-05-02T17:36:26.555+0200] {dag.py:2517} INFO - Setting next_dagrun for consume_1_and_2_with_asset_expressions to None, run_after=None
dag-processor | [2025-05-02T17:36:26.556+0200] {dag.py:2517} INFO - Setting next_dagrun for consume_1_or_2_with_asset_expressions to None, run_after=None
dag-processor | [2025-05-02T17:36:26.557+0200] {dag.py:2517} INFO - Setting next_dagrun for consume_1_or_both_2_and_3_with_asset_expressions to None, run_after=None
dag-processor | [2025-05-02T17:36:28.550+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:36:28.551+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:36:33.580+0200] {manager.py:523} INFO - Not time to refresh bundle dags-folder
dag-processor | [2025-05-02T17:36:33.582+0200] {manager.py:523} INFO - Not time to refresh bundle example_dags
dag-processor | [2025-05-02T17:36:35.592+0200] {manager.py:748} INFO -
dag-processor | ================================================================================
dag-processor | DAG File Processing Stats
dag-processor | Bundle        File Path                                                   PID    Current Duration      # DAGs    # Errors  Last Duration    Last Run At
dag-processor | ------------  ----------------------------------------------------------  -----  ------------------  --------  ----------  ---------------  -------------------
dag-processor | example_dags  example_workday_timetable.py                                                                  1           0  14.59s           2025-05-02T15:36:20
dag-processor | example_dags  example_xcom.py                                                                               1           0  14.63s           2025-05-02T15:36:20
dag-processor | example_dags  example_bash_operator.py                                                                      1           0  14.62s           2025-05-02T15:36:20
dag-processor | example_dags  example_bash_decorator.py                                                                     1           0  16.89s           2025-05-02T15:36:26
dag-processor | example_dags  example_dag_decorator.py                                                                      1           0  14.61s           2025-05-02T15:36:20
dag-processor | example_dags  example_asset_with_watchers.py                                                                1           0  16.86s           2025-05-02T15:36:26
dag-processor | example_dags  plugins/decreasing_priority_weight_strategy.py                                                0           0  14.60s           2025-05-02T15:36:20
dag-processor | example_dags  example_short_circuit_operator.py                                                             1           0  14.60s           2025-05-02T15:36:20
dag-processor | example_dags  tutorial_objectstorage.py                                                                     1           0  14.62s           2025-05-02T15:36:20
dag-processor | example_dags  example_skip_dag.py                                                                           1           0  14.60s           2025-05-02T15:36:20
dag-processor | example_dags  plugins/listener_plugin.py                                                                    0           0  14.60s           2025-05-02T15:36:20
dag-processor | example_dags  example_nested_branch_dag.py                                                                  1           0  14.61s           2025-05-02T15:36:20
dag-processor | example_dags  example_dynamic_task_mapping_with_no_taskflow_operators.py                                    1           0  14.61s           2025-05-02T15:36:21
dag-processor | example_dags  plugins/workday.py                                                                            0           0  14.59s           2025-05-02T15:36:21
dag-processor | example_dags  example_short_circuit_decorator.py                                                            1           0  14.61s           2025-05-02T15:36:22
dag-processor | example_dags  example_outlet_event_extra.py                                                                 3           0  16.90s           2025-05-02T15:36:24
dag-processor | example_dags  example_trigger_target_dag.py                                                                 1           0  16.87s           2025-05-02T15:36:24
dag-processor | example_dags  example_complex.py                                                                            1           0  16.88s           2025-05-02T15:36:24
dag-processor | example_dags  example_passing_params_via_test_command.py                                                    1           0  16.88s           2025-05-02T15:36:24
dag-processor | example_dags  example_setup_teardown.py                                                                     1           0  16.88s           2025-05-02T15:36:24
dag-processor | example_dags  example_python_decorator.py                                                                   1           0  16.86s           2025-05-02T15:36:24
dag-processor | example_dags  plugins/event_listener.py                                                                     0           0  16.87s           2025-05-02T15:36:24